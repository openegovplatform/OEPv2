/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.datamgt.parameter.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.datamgt.parameter.model.DefaultParameter;
import org.oep.core.datamgt.parameter.model.DefaultParameterModel;
import org.oep.core.datamgt.parameter.model.DefaultParameterSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DefaultParameter service. Represents a row in the &quot;oep_datamgt_DefaultParameter&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.datamgt.parameter.model.DefaultParameterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DefaultParameterImpl}.
 * </p>
 *
 * @author TrungDK
 * @see DefaultParameterImpl
 * @see org.oep.core.datamgt.parameter.model.DefaultParameter
 * @see org.oep.core.datamgt.parameter.model.DefaultParameterModel
 * @generated
 */
@JSON(strict = true)
public class DefaultParameterModelImpl extends BaseModelImpl<DefaultParameter>
	implements DefaultParameterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a default parameter model instance should use the {@link org.oep.core.datamgt.parameter.model.DefaultParameter} interface instead.
	 */
	public static final String TABLE_NAME = "oep_datamgt_DefaultParameter";
	public static final Object[][] TABLE_COLUMNS = {
			{ "defaultParameterId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "applicationName", Types.VARCHAR },
			{ "parameterName", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "parameterValue", Types.VARCHAR },
			{ "changeable", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_datamgt_DefaultParameter (defaultParameterId LONG not null primary key,companyId LONG,createDate DATE null,modifiedDate DATE null,applicationName VARCHAR(75) null,parameterName VARCHAR(75) null,title VARCHAR(75) null,parameterValue VARCHAR(75) null,changeable INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table oep_datamgt_DefaultParameter";
	public static final String ORDER_BY_JPQL = " ORDER BY defaultParameter.defaultParameterId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_datamgt_DefaultParameter.defaultParameterId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.datamgt.parameter.model.DefaultParameter"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.datamgt.parameter.model.DefaultParameter"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DefaultParameter toModel(DefaultParameterSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DefaultParameter model = new DefaultParameterImpl();

		model.setDefaultParameterId(soapModel.getDefaultParameterId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setApplicationName(soapModel.getApplicationName());
		model.setParameterName(soapModel.getParameterName());
		model.setTitle(soapModel.getTitle());
		model.setParameterValue(soapModel.getParameterValue());
		model.setChangeable(soapModel.getChangeable());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DefaultParameter> toModels(
		DefaultParameterSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DefaultParameter> models = new ArrayList<DefaultParameter>(soapModels.length);

		for (DefaultParameterSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.datamgt.parameter.model.DefaultParameter"));

	public DefaultParameterModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _defaultParameterId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDefaultParameterId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _defaultParameterId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DefaultParameter.class;
	}

	@Override
	public String getModelClassName() {
		return DefaultParameter.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("defaultParameterId", getDefaultParameterId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("applicationName", getApplicationName());
		attributes.put("parameterName", getParameterName());
		attributes.put("title", getTitle());
		attributes.put("parameterValue", getParameterValue());
		attributes.put("changeable", getChangeable());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long defaultParameterId = (Long)attributes.get("defaultParameterId");

		if (defaultParameterId != null) {
			setDefaultParameterId(defaultParameterId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String applicationName = (String)attributes.get("applicationName");

		if (applicationName != null) {
			setApplicationName(applicationName);
		}

		String parameterName = (String)attributes.get("parameterName");

		if (parameterName != null) {
			setParameterName(parameterName);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String parameterValue = (String)attributes.get("parameterValue");

		if (parameterValue != null) {
			setParameterValue(parameterValue);
		}

		Integer changeable = (Integer)attributes.get("changeable");

		if (changeable != null) {
			setChangeable(changeable);
		}
	}

	@JSON
	@Override
	public long getDefaultParameterId() {
		return _defaultParameterId;
	}

	@Override
	public void setDefaultParameterId(long defaultParameterId) {
		_defaultParameterId = defaultParameterId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getApplicationName() {
		if (_applicationName == null) {
			return StringPool.BLANK;
		}
		else {
			return _applicationName;
		}
	}

	@Override
	public void setApplicationName(String applicationName) {
		_applicationName = applicationName;
	}

	@JSON
	@Override
	public String getParameterName() {
		if (_parameterName == null) {
			return StringPool.BLANK;
		}
		else {
			return _parameterName;
		}
	}

	@Override
	public void setParameterName(String parameterName) {
		_parameterName = parameterName;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@JSON
	@Override
	public String getParameterValue() {
		if (_parameterValue == null) {
			return StringPool.BLANK;
		}
		else {
			return _parameterValue;
		}
	}

	@Override
	public void setParameterValue(String parameterValue) {
		_parameterValue = parameterValue;
	}

	@JSON
	@Override
	public int getChangeable() {
		return _changeable;
	}

	@Override
	public void setChangeable(int changeable) {
		_changeable = changeable;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DefaultParameter.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DefaultParameter toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DefaultParameter)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DefaultParameterImpl defaultParameterImpl = new DefaultParameterImpl();

		defaultParameterImpl.setDefaultParameterId(getDefaultParameterId());
		defaultParameterImpl.setCompanyId(getCompanyId());
		defaultParameterImpl.setCreateDate(getCreateDate());
		defaultParameterImpl.setModifiedDate(getModifiedDate());
		defaultParameterImpl.setApplicationName(getApplicationName());
		defaultParameterImpl.setParameterName(getParameterName());
		defaultParameterImpl.setTitle(getTitle());
		defaultParameterImpl.setParameterValue(getParameterValue());
		defaultParameterImpl.setChangeable(getChangeable());

		defaultParameterImpl.resetOriginalValues();

		return defaultParameterImpl;
	}

	@Override
	public int compareTo(DefaultParameter defaultParameter) {
		long primaryKey = defaultParameter.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DefaultParameter)) {
			return false;
		}

		DefaultParameter defaultParameter = (DefaultParameter)obj;

		long primaryKey = defaultParameter.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<DefaultParameter> toCacheModel() {
		DefaultParameterCacheModel defaultParameterCacheModel = new DefaultParameterCacheModel();

		defaultParameterCacheModel.defaultParameterId = getDefaultParameterId();

		defaultParameterCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			defaultParameterCacheModel.createDate = createDate.getTime();
		}
		else {
			defaultParameterCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			defaultParameterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			defaultParameterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		defaultParameterCacheModel.applicationName = getApplicationName();

		String applicationName = defaultParameterCacheModel.applicationName;

		if ((applicationName != null) && (applicationName.length() == 0)) {
			defaultParameterCacheModel.applicationName = null;
		}

		defaultParameterCacheModel.parameterName = getParameterName();

		String parameterName = defaultParameterCacheModel.parameterName;

		if ((parameterName != null) && (parameterName.length() == 0)) {
			defaultParameterCacheModel.parameterName = null;
		}

		defaultParameterCacheModel.title = getTitle();

		String title = defaultParameterCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			defaultParameterCacheModel.title = null;
		}

		defaultParameterCacheModel.parameterValue = getParameterValue();

		String parameterValue = defaultParameterCacheModel.parameterValue;

		if ((parameterValue != null) && (parameterValue.length() == 0)) {
			defaultParameterCacheModel.parameterValue = null;
		}

		defaultParameterCacheModel.changeable = getChangeable();

		return defaultParameterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{defaultParameterId=");
		sb.append(getDefaultParameterId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", applicationName=");
		sb.append(getApplicationName());
		sb.append(", parameterName=");
		sb.append(getParameterName());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", parameterValue=");
		sb.append(getParameterValue());
		sb.append(", changeable=");
		sb.append(getChangeable());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.datamgt.parameter.model.DefaultParameter");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>defaultParameterId</column-name><column-value><![CDATA[");
		sb.append(getDefaultParameterId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>applicationName</column-name><column-value><![CDATA[");
		sb.append(getApplicationName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parameterName</column-name><column-value><![CDATA[");
		sb.append(getParameterName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parameterValue</column-name><column-value><![CDATA[");
		sb.append(getParameterValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changeable</column-name><column-value><![CDATA[");
		sb.append(getChangeable());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DefaultParameter.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DefaultParameter.class
		};
	private long _defaultParameterId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private String _applicationName;
	private String _parameterName;
	private String _title;
	private String _parameterValue;
	private int _changeable;
	private DefaultParameter _escapedModel;
}