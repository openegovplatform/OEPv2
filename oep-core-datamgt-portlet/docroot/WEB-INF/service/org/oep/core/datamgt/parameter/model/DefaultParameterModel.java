/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.datamgt.parameter.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DefaultParameter service. Represents a row in the &quot;oep_datamgt_defaultparameter&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.oep.core.datamgt.parameter.model.impl.DefaultParameterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.oep.core.datamgt.parameter.model.impl.DefaultParameterImpl}.
 * </p>
 *
 * @author TrungDK
 * @see DefaultParameter
 * @see org.oep.core.datamgt.parameter.model.impl.DefaultParameterImpl
 * @see org.oep.core.datamgt.parameter.model.impl.DefaultParameterModelImpl
 * @generated
 */
public interface DefaultParameterModel extends BaseModel<DefaultParameter> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a default parameter model instance should use the {@link DefaultParameter} interface instead.
	 */

	/**
	 * Returns the primary key of this default parameter.
	 *
	 * @return the primary key of this default parameter
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this default parameter.
	 *
	 * @param primaryKey the primary key of this default parameter
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the default parameter ID of this default parameter.
	 *
	 * @return the default parameter ID of this default parameter
	 */
	public long getDefaultParameterId();

	/**
	 * Sets the default parameter ID of this default parameter.
	 *
	 * @param defaultParameterId the default parameter ID of this default parameter
	 */
	public void setDefaultParameterId(long defaultParameterId);

	/**
	 * Returns the company ID of this default parameter.
	 *
	 * @return the company ID of this default parameter
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this default parameter.
	 *
	 * @param companyId the company ID of this default parameter
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this default parameter.
	 *
	 * @return the create date of this default parameter
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this default parameter.
	 *
	 * @param createDate the create date of this default parameter
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this default parameter.
	 *
	 * @return the modified date of this default parameter
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this default parameter.
	 *
	 * @param modifiedDate the modified date of this default parameter
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the application name of this default parameter.
	 *
	 * @return the application name of this default parameter
	 */
	@AutoEscape
	public String getApplicationName();

	/**
	 * Sets the application name of this default parameter.
	 *
	 * @param applicationName the application name of this default parameter
	 */
	public void setApplicationName(String applicationName);

	/**
	 * Returns the parameter name of this default parameter.
	 *
	 * @return the parameter name of this default parameter
	 */
	@AutoEscape
	public String getParameterName();

	/**
	 * Sets the parameter name of this default parameter.
	 *
	 * @param parameterName the parameter name of this default parameter
	 */
	public void setParameterName(String parameterName);

	/**
	 * Returns the title of this default parameter.
	 *
	 * @return the title of this default parameter
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this default parameter.
	 *
	 * @param title the title of this default parameter
	 */
	public void setTitle(String title);

	/**
	 * Returns the parameter value of this default parameter.
	 *
	 * @return the parameter value of this default parameter
	 */
	@AutoEscape
	public String getParameterValue();

	/**
	 * Sets the parameter value of this default parameter.
	 *
	 * @param parameterValue the parameter value of this default parameter
	 */
	public void setParameterValue(String parameterValue);

	/**
	 * Returns the changeable of this default parameter.
	 *
	 * @return the changeable of this default parameter
	 */
	public int getChangeable();

	/**
	 * Sets the changeable of this default parameter.
	 *
	 * @param changeable the changeable of this default parameter
	 */
	public void setChangeable(int changeable);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DefaultParameter defaultParameter);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DefaultParameter> toCacheModel();

	@Override
	public DefaultParameter toEscapedModel();

	@Override
	public DefaultParameter toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}