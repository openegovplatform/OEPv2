/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the EbMessage service. Represents a row in the &quot;oep_dossiermgt_ebmessage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.oep.core.dossiermgt.model.impl.EbMessageModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.oep.core.dossiermgt.model.impl.EbMessageImpl}.
 * </p>
 *
 * @author trungdk
 * @see EbMessage
 * @see org.oep.core.dossiermgt.model.impl.EbMessageImpl
 * @see org.oep.core.dossiermgt.model.impl.EbMessageModelImpl
 * @generated
 */
public interface EbMessageModel extends BaseModel<EbMessage> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a eb message model instance should use the {@link EbMessage} interface instead.
	 */

	/**
	 * Returns the primary key of this eb message.
	 *
	 * @return the primary key of this eb message
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this eb message.
	 *
	 * @param primaryKey the primary key of this eb message
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the eb message ID of this eb message.
	 *
	 * @return the eb message ID of this eb message
	 */
	public long getEbMessageId();

	/**
	 * Sets the eb message ID of this eb message.
	 *
	 * @param ebMessageId the eb message ID of this eb message
	 */
	public void setEbMessageId(long ebMessageId);

	/**
	 * Returns the company ID of this eb message.
	 *
	 * @return the company ID of this eb message
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this eb message.
	 *
	 * @param companyId the company ID of this eb message
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this eb message.
	 *
	 * @return the create date of this eb message
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this eb message.
	 *
	 * @param createDate the create date of this eb message
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the message ID of this eb message.
	 *
	 * @return the message ID of this eb message
	 */
	@AutoEscape
	public String getMessageId();

	/**
	 * Sets the message ID of this eb message.
	 *
	 * @param messageId the message ID of this eb message
	 */
	public void setMessageId(String messageId);

	/**
	 * Returns the cpa ID of this eb message.
	 *
	 * @return the cpa ID of this eb message
	 */
	@AutoEscape
	public String getCpaId();

	/**
	 * Sets the cpa ID of this eb message.
	 *
	 * @param cpaId the cpa ID of this eb message
	 */
	public void setCpaId(String cpaId);

	/**
	 * Returns the service of this eb message.
	 *
	 * @return the service of this eb message
	 */
	@AutoEscape
	public String getService();

	/**
	 * Sets the service of this eb message.
	 *
	 * @param service the service of this eb message
	 */
	public void setService(String service);

	/**
	 * Returns the action of this eb message.
	 *
	 * @return the action of this eb message
	 */
	@AutoEscape
	public String getAction();

	/**
	 * Sets the action of this eb message.
	 *
	 * @param action the action of this eb message
	 */
	public void setAction(String action);

	/**
	 * Returns the conversation ID of this eb message.
	 *
	 * @return the conversation ID of this eb message
	 */
	@AutoEscape
	public String getConversationId();

	/**
	 * Sets the conversation ID of this eb message.
	 *
	 * @param conversationId the conversation ID of this eb message
	 */
	public void setConversationId(String conversationId);

	/**
	 * Returns the from party ID of this eb message.
	 *
	 * @return the from party ID of this eb message
	 */
	@AutoEscape
	public String getFromPartyId();

	/**
	 * Sets the from party ID of this eb message.
	 *
	 * @param fromPartyId the from party ID of this eb message
	 */
	public void setFromPartyId(String fromPartyId);

	/**
	 * Returns the from party type of this eb message.
	 *
	 * @return the from party type of this eb message
	 */
	@AutoEscape
	public String getFromPartyType();

	/**
	 * Sets the from party type of this eb message.
	 *
	 * @param fromPartyType the from party type of this eb message
	 */
	public void setFromPartyType(String fromPartyType);

	/**
	 * Returns the to party ID of this eb message.
	 *
	 * @return the to party ID of this eb message
	 */
	@AutoEscape
	public String getToPartyId();

	/**
	 * Sets the to party ID of this eb message.
	 *
	 * @param toPartyId the to party ID of this eb message
	 */
	public void setToPartyId(String toPartyId);

	/**
	 * Returns the to party type of this eb message.
	 *
	 * @return the to party type of this eb message
	 */
	@AutoEscape
	public String getToPartyType();

	/**
	 * Sets the to party type of this eb message.
	 *
	 * @param toPartyType the to party type of this eb message
	 */
	public void setToPartyType(String toPartyType);

	/**
	 * Returns the ref to message ID of this eb message.
	 *
	 * @return the ref to message ID of this eb message
	 */
	@AutoEscape
	public String getRefToMessageId();

	/**
	 * Sets the ref to message ID of this eb message.
	 *
	 * @param refToMessageId the ref to message ID of this eb message
	 */
	public void setRefToMessageId(String refToMessageId);

	/**
	 * Returns the status of this eb message.
	 *
	 * @return the status of this eb message
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this eb message.
	 *
	 * @param status the status of this eb message
	 */
	public void setStatus(String status);

	/**
	 * Returns the status description of this eb message.
	 *
	 * @return the status description of this eb message
	 */
	@AutoEscape
	public String getStatusDescription();

	/**
	 * Sets the status description of this eb message.
	 *
	 * @param statusDescription the status description of this eb message
	 */
	public void setStatusDescription(String statusDescription);

	/**
	 * Returns the ack message ID of this eb message.
	 *
	 * @return the ack message ID of this eb message
	 */
	@AutoEscape
	public String getAckMessageId();

	/**
	 * Sets the ack message ID of this eb message.
	 *
	 * @param ackMessageId the ack message ID of this eb message
	 */
	public void setAckMessageId(String ackMessageId);

	/**
	 * Returns the ack status of this eb message.
	 *
	 * @return the ack status of this eb message
	 */
	@AutoEscape
	public String getAckStatus();

	/**
	 * Sets the ack status of this eb message.
	 *
	 * @param ackStatus the ack status of this eb message
	 */
	public void setAckStatus(String ackStatus);

	/**
	 * Returns the ack status description of this eb message.
	 *
	 * @return the ack status description of this eb message
	 */
	@AutoEscape
	public String getAckStatusDescription();

	/**
	 * Sets the ack status description of this eb message.
	 *
	 * @param ackStatusDescription the ack status description of this eb message
	 */
	public void setAckStatusDescription(String ackStatusDescription);

	/**
	 * Returns the message description of this eb message.
	 *
	 * @return the message description of this eb message
	 */
	@AutoEscape
	public String getMessageDescription();

	/**
	 * Sets the message description of this eb message.
	 *
	 * @param messageDescription the message description of this eb message
	 */
	public void setMessageDescription(String messageDescription);

	/**
	 * Returns the inbound of this eb message.
	 *
	 * @return the inbound of this eb message
	 */
	public int getInbound();

	/**
	 * Sets the inbound of this eb message.
	 *
	 * @param inbound the inbound of this eb message
	 */
	public void setInbound(int inbound);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(EbMessage ebMessage);

	@Override
	public int hashCode();

	@Override
	public CacheModel<EbMessage> toCacheModel();

	@Override
	public EbMessage toEscapedModel();

	@Override
	public EbMessage toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}