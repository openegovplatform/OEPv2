/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.dossiermgt.model.Dossier;
import org.oep.core.dossiermgt.model.DossierModel;
import org.oep.core.dossiermgt.model.DossierSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Dossier service. Represents a row in the &quot;oep_dossiermgt_dossier&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.dossiermgt.model.DossierModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierImpl}.
 * </p>
 *
 * @author trungdk
 * @see DossierImpl
 * @see org.oep.core.dossiermgt.model.Dossier
 * @see org.oep.core.dossiermgt.model.DossierModel
 * @generated
 */
@JSON(strict = true)
public class DossierModelImpl extends BaseModelImpl<Dossier>
	implements DossierModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier model instance should use the {@link org.oep.core.dossiermgt.model.Dossier} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_dossier";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "dossierId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizationId", Types.BIGINT },
			{ "dossierProcId", Types.BIGINT },
			{ "govAgentId", Types.VARCHAR },
			{ "govAgentName", Types.VARCHAR },
			{ "subjectId", Types.VARCHAR },
			{ "subjectType", Types.VARCHAR },
			{ "subjectName", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "cityNo", Types.VARCHAR },
			{ "cityName", Types.VARCHAR },
			{ "districtNo", Types.VARCHAR },
			{ "districtName", Types.VARCHAR },
			{ "wardNo", Types.VARCHAR },
			{ "wardName", Types.VARCHAR },
			{ "telNo", Types.VARCHAR },
			{ "contactPersonName", Types.VARCHAR },
			{ "contactPersonTel", Types.VARCHAR },
			{ "note", Types.VARCHAR },
			{ "resumeDescription", Types.VARCHAR },
			{ "receptionNo", Types.VARCHAR },
			{ "submissionDate", Types.TIMESTAMP },
			{ "receptionDate", Types.TIMESTAMP },
			{ "resubmissionDate", Types.TIMESTAMP },
			{ "appointmentDate", Types.TIMESTAMP },
			{ "releaseDate", Types.TIMESTAMP },
			{ "completionDate", Types.TIMESTAMP },
			{ "status", Types.VARCHAR },
			{ "statusDescription", Types.VARCHAR },
			{ "feedbackNote", Types.VARCHAR },
			{ "dirty", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_dossier (uuid_ VARCHAR(75) null,dossierId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,organizationId LONG,dossierProcId LONG,govAgentId VARCHAR(30) null,govAgentName VARCHAR(200) null,subjectId VARCHAR(30) null,subjectType VARCHAR(30) null,subjectName VARCHAR(100) null,address VARCHAR(255) null,cityNo VARCHAR(30) null,cityName VARCHAR(100) null,districtNo VARCHAR(30) null,districtName VARCHAR(100) null,wardNo VARCHAR(30) null,wardName VARCHAR(100) null,telNo VARCHAR(30) null,contactPersonName VARCHAR(100) null,contactPersonTel VARCHAR(30) null,note VARCHAR(255) null,resumeDescription VARCHAR(255) null,receptionNo VARCHAR(30) null,submissionDate DATE null,receptionDate DATE null,resubmissionDate DATE null,appointmentDate DATE null,releaseDate DATE null,completionDate DATE null,status VARCHAR(30) null,statusDescription VARCHAR(100) null,feedbackNote VARCHAR(255) null,dirty INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_dossier";
	public static final String ORDER_BY_JPQL = " ORDER BY dossier.dossierId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_dossier.dossierId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.dossiermgt.model.Dossier"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.dossiermgt.model.Dossier"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.core.dossiermgt.model.Dossier"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long DOSSIERID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Dossier toModel(DossierSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Dossier model = new DossierImpl();

		model.setUuid(soapModel.getUuid());
		model.setDossierId(soapModel.getDossierId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setDossierProcId(soapModel.getDossierProcId());
		model.setGovAgentId(soapModel.getGovAgentId());
		model.setGovAgentName(soapModel.getGovAgentName());
		model.setSubjectId(soapModel.getSubjectId());
		model.setSubjectType(soapModel.getSubjectType());
		model.setSubjectName(soapModel.getSubjectName());
		model.setAddress(soapModel.getAddress());
		model.setCityNo(soapModel.getCityNo());
		model.setCityName(soapModel.getCityName());
		model.setDistrictNo(soapModel.getDistrictNo());
		model.setDistrictName(soapModel.getDistrictName());
		model.setWardNo(soapModel.getWardNo());
		model.setWardName(soapModel.getWardName());
		model.setTelNo(soapModel.getTelNo());
		model.setContactPersonName(soapModel.getContactPersonName());
		model.setContactPersonTel(soapModel.getContactPersonTel());
		model.setNote(soapModel.getNote());
		model.setResumeDescription(soapModel.getResumeDescription());
		model.setReceptionNo(soapModel.getReceptionNo());
		model.setSubmissionDate(soapModel.getSubmissionDate());
		model.setReceptionDate(soapModel.getReceptionDate());
		model.setResubmissionDate(soapModel.getResubmissionDate());
		model.setAppointmentDate(soapModel.getAppointmentDate());
		model.setReleaseDate(soapModel.getReleaseDate());
		model.setCompletionDate(soapModel.getCompletionDate());
		model.setStatus(soapModel.getStatus());
		model.setStatusDescription(soapModel.getStatusDescription());
		model.setFeedbackNote(soapModel.getFeedbackNote());
		model.setDirty(soapModel.getDirty());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Dossier> toModels(DossierSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Dossier> models = new ArrayList<Dossier>(soapModels.length);

		for (DossierSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.dossiermgt.model.Dossier"));

	public DossierModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Dossier.class;
	}

	@Override
	public String getModelClassName() {
		return Dossier.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("dossierId", getDossierId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("dossierProcId", getDossierProcId());
		attributes.put("govAgentId", getGovAgentId());
		attributes.put("govAgentName", getGovAgentName());
		attributes.put("subjectId", getSubjectId());
		attributes.put("subjectType", getSubjectType());
		attributes.put("subjectName", getSubjectName());
		attributes.put("address", getAddress());
		attributes.put("cityNo", getCityNo());
		attributes.put("cityName", getCityName());
		attributes.put("districtNo", getDistrictNo());
		attributes.put("districtName", getDistrictName());
		attributes.put("wardNo", getWardNo());
		attributes.put("wardName", getWardName());
		attributes.put("telNo", getTelNo());
		attributes.put("contactPersonName", getContactPersonName());
		attributes.put("contactPersonTel", getContactPersonTel());
		attributes.put("note", getNote());
		attributes.put("resumeDescription", getResumeDescription());
		attributes.put("receptionNo", getReceptionNo());
		attributes.put("submissionDate", getSubmissionDate());
		attributes.put("receptionDate", getReceptionDate());
		attributes.put("resubmissionDate", getResubmissionDate());
		attributes.put("appointmentDate", getAppointmentDate());
		attributes.put("releaseDate", getReleaseDate());
		attributes.put("completionDate", getCompletionDate());
		attributes.put("status", getStatus());
		attributes.put("statusDescription", getStatusDescription());
		attributes.put("feedbackNote", getFeedbackNote());
		attributes.put("dirty", getDirty());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long dossierProcId = (Long)attributes.get("dossierProcId");

		if (dossierProcId != null) {
			setDossierProcId(dossierProcId);
		}

		String govAgentId = (String)attributes.get("govAgentId");

		if (govAgentId != null) {
			setGovAgentId(govAgentId);
		}

		String govAgentName = (String)attributes.get("govAgentName");

		if (govAgentName != null) {
			setGovAgentName(govAgentName);
		}

		String subjectId = (String)attributes.get("subjectId");

		if (subjectId != null) {
			setSubjectId(subjectId);
		}

		String subjectType = (String)attributes.get("subjectType");

		if (subjectType != null) {
			setSubjectType(subjectType);
		}

		String subjectName = (String)attributes.get("subjectName");

		if (subjectName != null) {
			setSubjectName(subjectName);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String cityNo = (String)attributes.get("cityNo");

		if (cityNo != null) {
			setCityNo(cityNo);
		}

		String cityName = (String)attributes.get("cityName");

		if (cityName != null) {
			setCityName(cityName);
		}

		String districtNo = (String)attributes.get("districtNo");

		if (districtNo != null) {
			setDistrictNo(districtNo);
		}

		String districtName = (String)attributes.get("districtName");

		if (districtName != null) {
			setDistrictName(districtName);
		}

		String wardNo = (String)attributes.get("wardNo");

		if (wardNo != null) {
			setWardNo(wardNo);
		}

		String wardName = (String)attributes.get("wardName");

		if (wardName != null) {
			setWardName(wardName);
		}

		String telNo = (String)attributes.get("telNo");

		if (telNo != null) {
			setTelNo(telNo);
		}

		String contactPersonName = (String)attributes.get("contactPersonName");

		if (contactPersonName != null) {
			setContactPersonName(contactPersonName);
		}

		String contactPersonTel = (String)attributes.get("contactPersonTel");

		if (contactPersonTel != null) {
			setContactPersonTel(contactPersonTel);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		String resumeDescription = (String)attributes.get("resumeDescription");

		if (resumeDescription != null) {
			setResumeDescription(resumeDescription);
		}

		String receptionNo = (String)attributes.get("receptionNo");

		if (receptionNo != null) {
			setReceptionNo(receptionNo);
		}

		Date submissionDate = (Date)attributes.get("submissionDate");

		if (submissionDate != null) {
			setSubmissionDate(submissionDate);
		}

		Date receptionDate = (Date)attributes.get("receptionDate");

		if (receptionDate != null) {
			setReceptionDate(receptionDate);
		}

		Date resubmissionDate = (Date)attributes.get("resubmissionDate");

		if (resubmissionDate != null) {
			setResubmissionDate(resubmissionDate);
		}

		Date appointmentDate = (Date)attributes.get("appointmentDate");

		if (appointmentDate != null) {
			setAppointmentDate(appointmentDate);
		}

		Date releaseDate = (Date)attributes.get("releaseDate");

		if (releaseDate != null) {
			setReleaseDate(releaseDate);
		}

		Date completionDate = (Date)attributes.get("completionDate");

		if (completionDate != null) {
			setCompletionDate(completionDate);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String statusDescription = (String)attributes.get("statusDescription");

		if (statusDescription != null) {
			setStatusDescription(statusDescription);
		}

		String feedbackNote = (String)attributes.get("feedbackNote");

		if (feedbackNote != null) {
			setFeedbackNote(feedbackNote);
		}

		Integer dirty = (Integer)attributes.get("dirty");

		if (dirty != null) {
			setDirty(dirty);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@JSON
	@Override
	public long getDossierProcId() {
		return _dossierProcId;
	}

	@Override
	public void setDossierProcId(long dossierProcId) {
		_dossierProcId = dossierProcId;
	}

	@JSON
	@Override
	public String getGovAgentId() {
		if (_govAgentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgentId;
		}
	}

	@Override
	public void setGovAgentId(String govAgentId) {
		_govAgentId = govAgentId;
	}

	@JSON
	@Override
	public String getGovAgentName() {
		if (_govAgentName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgentName;
		}
	}

	@Override
	public void setGovAgentName(String govAgentName) {
		_govAgentName = govAgentName;
	}

	@JSON
	@Override
	public String getSubjectId() {
		if (_subjectId == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectId;
		}
	}

	@Override
	public void setSubjectId(String subjectId) {
		_subjectId = subjectId;
	}

	@JSON
	@Override
	public String getSubjectType() {
		if (_subjectType == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectType;
		}
	}

	@Override
	public void setSubjectType(String subjectType) {
		_subjectType = subjectType;
	}

	@JSON
	@Override
	public String getSubjectName() {
		if (_subjectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectName;
		}
	}

	@Override
	public void setSubjectName(String subjectName) {
		_subjectName = subjectName;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	@Override
	public String getCityNo() {
		if (_cityNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityNo;
		}
	}

	@Override
	public void setCityNo(String cityNo) {
		_cityNo = cityNo;
	}

	@JSON
	@Override
	public String getCityName() {
		if (_cityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityName;
		}
	}

	@Override
	public void setCityName(String cityName) {
		_cityName = cityName;
	}

	@JSON
	@Override
	public String getDistrictNo() {
		if (_districtNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtNo;
		}
	}

	@Override
	public void setDistrictNo(String districtNo) {
		_districtNo = districtNo;
	}

	@JSON
	@Override
	public String getDistrictName() {
		if (_districtName == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtName;
		}
	}

	@Override
	public void setDistrictName(String districtName) {
		_districtName = districtName;
	}

	@JSON
	@Override
	public String getWardNo() {
		if (_wardNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardNo;
		}
	}

	@Override
	public void setWardNo(String wardNo) {
		_wardNo = wardNo;
	}

	@JSON
	@Override
	public String getWardName() {
		if (_wardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardName;
		}
	}

	@Override
	public void setWardName(String wardName) {
		_wardName = wardName;
	}

	@JSON
	@Override
	public String getTelNo() {
		if (_telNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _telNo;
		}
	}

	@Override
	public void setTelNo(String telNo) {
		_telNo = telNo;
	}

	@JSON
	@Override
	public String getContactPersonName() {
		if (_contactPersonName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactPersonName;
		}
	}

	@Override
	public void setContactPersonName(String contactPersonName) {
		_contactPersonName = contactPersonName;
	}

	@JSON
	@Override
	public String getContactPersonTel() {
		if (_contactPersonTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactPersonTel;
		}
	}

	@Override
	public void setContactPersonTel(String contactPersonTel) {
		_contactPersonTel = contactPersonTel;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public String getResumeDescription() {
		if (_resumeDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _resumeDescription;
		}
	}

	@Override
	public void setResumeDescription(String resumeDescription) {
		_resumeDescription = resumeDescription;
	}

	@JSON
	@Override
	public String getReceptionNo() {
		if (_receptionNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _receptionNo;
		}
	}

	@Override
	public void setReceptionNo(String receptionNo) {
		_receptionNo = receptionNo;
	}

	@JSON
	@Override
	public Date getSubmissionDate() {
		return _submissionDate;
	}

	@Override
	public void setSubmissionDate(Date submissionDate) {
		_submissionDate = submissionDate;
	}

	@JSON
	@Override
	public Date getReceptionDate() {
		return _receptionDate;
	}

	@Override
	public void setReceptionDate(Date receptionDate) {
		_receptionDate = receptionDate;
	}

	@JSON
	@Override
	public Date getResubmissionDate() {
		return _resubmissionDate;
	}

	@Override
	public void setResubmissionDate(Date resubmissionDate) {
		_resubmissionDate = resubmissionDate;
	}

	@JSON
	@Override
	public Date getAppointmentDate() {
		return _appointmentDate;
	}

	@Override
	public void setAppointmentDate(Date appointmentDate) {
		_appointmentDate = appointmentDate;
	}

	@JSON
	@Override
	public Date getReleaseDate() {
		return _releaseDate;
	}

	@Override
	public void setReleaseDate(Date releaseDate) {
		_releaseDate = releaseDate;
	}

	@JSON
	@Override
	public Date getCompletionDate() {
		return _completionDate;
	}

	@Override
	public void setCompletionDate(Date completionDate) {
		_completionDate = completionDate;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public String getStatusDescription() {
		if (_statusDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _statusDescription;
		}
	}

	@Override
	public void setStatusDescription(String statusDescription) {
		_statusDescription = statusDescription;
	}

	@JSON
	@Override
	public String getFeedbackNote() {
		if (_feedbackNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _feedbackNote;
		}
	}

	@Override
	public void setFeedbackNote(String feedbackNote) {
		_feedbackNote = feedbackNote;
	}

	@JSON
	@Override
	public int getDirty() {
		return _dirty;
	}

	@Override
	public void setDirty(int dirty) {
		_dirty = dirty;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				Dossier.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Dossier.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Dossier toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Dossier)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierImpl dossierImpl = new DossierImpl();

		dossierImpl.setUuid(getUuid());
		dossierImpl.setDossierId(getDossierId());
		dossierImpl.setUserId(getUserId());
		dossierImpl.setGroupId(getGroupId());
		dossierImpl.setCompanyId(getCompanyId());
		dossierImpl.setCreateDate(getCreateDate());
		dossierImpl.setModifiedDate(getModifiedDate());
		dossierImpl.setOrganizationId(getOrganizationId());
		dossierImpl.setDossierProcId(getDossierProcId());
		dossierImpl.setGovAgentId(getGovAgentId());
		dossierImpl.setGovAgentName(getGovAgentName());
		dossierImpl.setSubjectId(getSubjectId());
		dossierImpl.setSubjectType(getSubjectType());
		dossierImpl.setSubjectName(getSubjectName());
		dossierImpl.setAddress(getAddress());
		dossierImpl.setCityNo(getCityNo());
		dossierImpl.setCityName(getCityName());
		dossierImpl.setDistrictNo(getDistrictNo());
		dossierImpl.setDistrictName(getDistrictName());
		dossierImpl.setWardNo(getWardNo());
		dossierImpl.setWardName(getWardName());
		dossierImpl.setTelNo(getTelNo());
		dossierImpl.setContactPersonName(getContactPersonName());
		dossierImpl.setContactPersonTel(getContactPersonTel());
		dossierImpl.setNote(getNote());
		dossierImpl.setResumeDescription(getResumeDescription());
		dossierImpl.setReceptionNo(getReceptionNo());
		dossierImpl.setSubmissionDate(getSubmissionDate());
		dossierImpl.setReceptionDate(getReceptionDate());
		dossierImpl.setResubmissionDate(getResubmissionDate());
		dossierImpl.setAppointmentDate(getAppointmentDate());
		dossierImpl.setReleaseDate(getReleaseDate());
		dossierImpl.setCompletionDate(getCompletionDate());
		dossierImpl.setStatus(getStatus());
		dossierImpl.setStatusDescription(getStatusDescription());
		dossierImpl.setFeedbackNote(getFeedbackNote());
		dossierImpl.setDirty(getDirty());

		dossierImpl.resetOriginalValues();

		return dossierImpl;
	}

	@Override
	public int compareTo(Dossier dossier) {
		long primaryKey = dossier.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Dossier)) {
			return false;
		}

		Dossier dossier = (Dossier)obj;

		long primaryKey = dossier.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DossierModelImpl dossierModelImpl = this;

		dossierModelImpl._originalUuid = dossierModelImpl._uuid;

		dossierModelImpl._originalGroupId = dossierModelImpl._groupId;

		dossierModelImpl._setOriginalGroupId = false;

		dossierModelImpl._originalCompanyId = dossierModelImpl._companyId;

		dossierModelImpl._setOriginalCompanyId = false;

		dossierModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Dossier> toCacheModel() {
		DossierCacheModel dossierCacheModel = new DossierCacheModel();

		dossierCacheModel.uuid = getUuid();

		String uuid = dossierCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			dossierCacheModel.uuid = null;
		}

		dossierCacheModel.dossierId = getDossierId();

		dossierCacheModel.userId = getUserId();

		dossierCacheModel.groupId = getGroupId();

		dossierCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierCacheModel.organizationId = getOrganizationId();

		dossierCacheModel.dossierProcId = getDossierProcId();

		dossierCacheModel.govAgentId = getGovAgentId();

		String govAgentId = dossierCacheModel.govAgentId;

		if ((govAgentId != null) && (govAgentId.length() == 0)) {
			dossierCacheModel.govAgentId = null;
		}

		dossierCacheModel.govAgentName = getGovAgentName();

		String govAgentName = dossierCacheModel.govAgentName;

		if ((govAgentName != null) && (govAgentName.length() == 0)) {
			dossierCacheModel.govAgentName = null;
		}

		dossierCacheModel.subjectId = getSubjectId();

		String subjectId = dossierCacheModel.subjectId;

		if ((subjectId != null) && (subjectId.length() == 0)) {
			dossierCacheModel.subjectId = null;
		}

		dossierCacheModel.subjectType = getSubjectType();

		String subjectType = dossierCacheModel.subjectType;

		if ((subjectType != null) && (subjectType.length() == 0)) {
			dossierCacheModel.subjectType = null;
		}

		dossierCacheModel.subjectName = getSubjectName();

		String subjectName = dossierCacheModel.subjectName;

		if ((subjectName != null) && (subjectName.length() == 0)) {
			dossierCacheModel.subjectName = null;
		}

		dossierCacheModel.address = getAddress();

		String address = dossierCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			dossierCacheModel.address = null;
		}

		dossierCacheModel.cityNo = getCityNo();

		String cityNo = dossierCacheModel.cityNo;

		if ((cityNo != null) && (cityNo.length() == 0)) {
			dossierCacheModel.cityNo = null;
		}

		dossierCacheModel.cityName = getCityName();

		String cityName = dossierCacheModel.cityName;

		if ((cityName != null) && (cityName.length() == 0)) {
			dossierCacheModel.cityName = null;
		}

		dossierCacheModel.districtNo = getDistrictNo();

		String districtNo = dossierCacheModel.districtNo;

		if ((districtNo != null) && (districtNo.length() == 0)) {
			dossierCacheModel.districtNo = null;
		}

		dossierCacheModel.districtName = getDistrictName();

		String districtName = dossierCacheModel.districtName;

		if ((districtName != null) && (districtName.length() == 0)) {
			dossierCacheModel.districtName = null;
		}

		dossierCacheModel.wardNo = getWardNo();

		String wardNo = dossierCacheModel.wardNo;

		if ((wardNo != null) && (wardNo.length() == 0)) {
			dossierCacheModel.wardNo = null;
		}

		dossierCacheModel.wardName = getWardName();

		String wardName = dossierCacheModel.wardName;

		if ((wardName != null) && (wardName.length() == 0)) {
			dossierCacheModel.wardName = null;
		}

		dossierCacheModel.telNo = getTelNo();

		String telNo = dossierCacheModel.telNo;

		if ((telNo != null) && (telNo.length() == 0)) {
			dossierCacheModel.telNo = null;
		}

		dossierCacheModel.contactPersonName = getContactPersonName();

		String contactPersonName = dossierCacheModel.contactPersonName;

		if ((contactPersonName != null) && (contactPersonName.length() == 0)) {
			dossierCacheModel.contactPersonName = null;
		}

		dossierCacheModel.contactPersonTel = getContactPersonTel();

		String contactPersonTel = dossierCacheModel.contactPersonTel;

		if ((contactPersonTel != null) && (contactPersonTel.length() == 0)) {
			dossierCacheModel.contactPersonTel = null;
		}

		dossierCacheModel.note = getNote();

		String note = dossierCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			dossierCacheModel.note = null;
		}

		dossierCacheModel.resumeDescription = getResumeDescription();

		String resumeDescription = dossierCacheModel.resumeDescription;

		if ((resumeDescription != null) && (resumeDescription.length() == 0)) {
			dossierCacheModel.resumeDescription = null;
		}

		dossierCacheModel.receptionNo = getReceptionNo();

		String receptionNo = dossierCacheModel.receptionNo;

		if ((receptionNo != null) && (receptionNo.length() == 0)) {
			dossierCacheModel.receptionNo = null;
		}

		Date submissionDate = getSubmissionDate();

		if (submissionDate != null) {
			dossierCacheModel.submissionDate = submissionDate.getTime();
		}
		else {
			dossierCacheModel.submissionDate = Long.MIN_VALUE;
		}

		Date receptionDate = getReceptionDate();

		if (receptionDate != null) {
			dossierCacheModel.receptionDate = receptionDate.getTime();
		}
		else {
			dossierCacheModel.receptionDate = Long.MIN_VALUE;
		}

		Date resubmissionDate = getResubmissionDate();

		if (resubmissionDate != null) {
			dossierCacheModel.resubmissionDate = resubmissionDate.getTime();
		}
		else {
			dossierCacheModel.resubmissionDate = Long.MIN_VALUE;
		}

		Date appointmentDate = getAppointmentDate();

		if (appointmentDate != null) {
			dossierCacheModel.appointmentDate = appointmentDate.getTime();
		}
		else {
			dossierCacheModel.appointmentDate = Long.MIN_VALUE;
		}

		Date releaseDate = getReleaseDate();

		if (releaseDate != null) {
			dossierCacheModel.releaseDate = releaseDate.getTime();
		}
		else {
			dossierCacheModel.releaseDate = Long.MIN_VALUE;
		}

		Date completionDate = getCompletionDate();

		if (completionDate != null) {
			dossierCacheModel.completionDate = completionDate.getTime();
		}
		else {
			dossierCacheModel.completionDate = Long.MIN_VALUE;
		}

		dossierCacheModel.status = getStatus();

		String status = dossierCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			dossierCacheModel.status = null;
		}

		dossierCacheModel.statusDescription = getStatusDescription();

		String statusDescription = dossierCacheModel.statusDescription;

		if ((statusDescription != null) && (statusDescription.length() == 0)) {
			dossierCacheModel.statusDescription = null;
		}

		dossierCacheModel.feedbackNote = getFeedbackNote();

		String feedbackNote = dossierCacheModel.feedbackNote;

		if ((feedbackNote != null) && (feedbackNote.length() == 0)) {
			dossierCacheModel.feedbackNote = null;
		}

		dossierCacheModel.dirty = getDirty();

		return dossierCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(75);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", dossierProcId=");
		sb.append(getDossierProcId());
		sb.append(", govAgentId=");
		sb.append(getGovAgentId());
		sb.append(", govAgentName=");
		sb.append(getGovAgentName());
		sb.append(", subjectId=");
		sb.append(getSubjectId());
		sb.append(", subjectType=");
		sb.append(getSubjectType());
		sb.append(", subjectName=");
		sb.append(getSubjectName());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", cityNo=");
		sb.append(getCityNo());
		sb.append(", cityName=");
		sb.append(getCityName());
		sb.append(", districtNo=");
		sb.append(getDistrictNo());
		sb.append(", districtName=");
		sb.append(getDistrictName());
		sb.append(", wardNo=");
		sb.append(getWardNo());
		sb.append(", wardName=");
		sb.append(getWardName());
		sb.append(", telNo=");
		sb.append(getTelNo());
		sb.append(", contactPersonName=");
		sb.append(getContactPersonName());
		sb.append(", contactPersonTel=");
		sb.append(getContactPersonTel());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", resumeDescription=");
		sb.append(getResumeDescription());
		sb.append(", receptionNo=");
		sb.append(getReceptionNo());
		sb.append(", submissionDate=");
		sb.append(getSubmissionDate());
		sb.append(", receptionDate=");
		sb.append(getReceptionDate());
		sb.append(", resubmissionDate=");
		sb.append(getResubmissionDate());
		sb.append(", appointmentDate=");
		sb.append(getAppointmentDate());
		sb.append(", releaseDate=");
		sb.append(getReleaseDate());
		sb.append(", completionDate=");
		sb.append(getCompletionDate());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", statusDescription=");
		sb.append(getStatusDescription());
		sb.append(", feedbackNote=");
		sb.append(getFeedbackNote());
		sb.append(", dirty=");
		sb.append(getDirty());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(115);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.dossiermgt.model.Dossier");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierProcId</column-name><column-value><![CDATA[");
		sb.append(getDossierProcId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgentId</column-name><column-value><![CDATA[");
		sb.append(getGovAgentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgentName</column-name><column-value><![CDATA[");
		sb.append(getGovAgentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectId</column-name><column-value><![CDATA[");
		sb.append(getSubjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectType</column-name><column-value><![CDATA[");
		sb.append(getSubjectType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectName</column-name><column-value><![CDATA[");
		sb.append(getSubjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityNo</column-name><column-value><![CDATA[");
		sb.append(getCityNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityName</column-name><column-value><![CDATA[");
		sb.append(getCityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtNo</column-name><column-value><![CDATA[");
		sb.append(getDistrictNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtName</column-name><column-value><![CDATA[");
		sb.append(getDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardNo</column-name><column-value><![CDATA[");
		sb.append(getWardNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardName</column-name><column-value><![CDATA[");
		sb.append(getWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telNo</column-name><column-value><![CDATA[");
		sb.append(getTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPersonName</column-name><column-value><![CDATA[");
		sb.append(getContactPersonName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPersonTel</column-name><column-value><![CDATA[");
		sb.append(getContactPersonTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resumeDescription</column-name><column-value><![CDATA[");
		sb.append(getResumeDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receptionNo</column-name><column-value><![CDATA[");
		sb.append(getReceptionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>submissionDate</column-name><column-value><![CDATA[");
		sb.append(getSubmissionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receptionDate</column-name><column-value><![CDATA[");
		sb.append(getReceptionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resubmissionDate</column-name><column-value><![CDATA[");
		sb.append(getResubmissionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appointmentDate</column-name><column-value><![CDATA[");
		sb.append(getAppointmentDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>releaseDate</column-name><column-value><![CDATA[");
		sb.append(getReleaseDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>completionDate</column-name><column-value><![CDATA[");
		sb.append(getCompletionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statusDescription</column-name><column-value><![CDATA[");
		sb.append(getStatusDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>feedbackNote</column-name><column-value><![CDATA[");
		sb.append(getFeedbackNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dirty</column-name><column-value><![CDATA[");
		sb.append(getDirty());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Dossier.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Dossier.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _dossierId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _organizationId;
	private long _dossierProcId;
	private String _govAgentId;
	private String _govAgentName;
	private String _subjectId;
	private String _subjectType;
	private String _subjectName;
	private String _address;
	private String _cityNo;
	private String _cityName;
	private String _districtNo;
	private String _districtName;
	private String _wardNo;
	private String _wardName;
	private String _telNo;
	private String _contactPersonName;
	private String _contactPersonTel;
	private String _note;
	private String _resumeDescription;
	private String _receptionNo;
	private Date _submissionDate;
	private Date _receptionDate;
	private Date _resubmissionDate;
	private Date _appointmentDate;
	private Date _releaseDate;
	private Date _completionDate;
	private String _status;
	private String _statusDescription;
	private String _feedbackNote;
	private int _dirty;
	private long _columnBitmask;
	private Dossier _escapedModel;
}