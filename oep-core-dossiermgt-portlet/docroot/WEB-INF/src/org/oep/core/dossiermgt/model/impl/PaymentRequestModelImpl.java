/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.dossiermgt.model.PaymentRequest;
import org.oep.core.dossiermgt.model.PaymentRequestModel;
import org.oep.core.dossiermgt.model.PaymentRequestSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PaymentRequest service. Represents a row in the &quot;oep_dossiermgt_paymentrequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.dossiermgt.model.PaymentRequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentRequestImpl}.
 * </p>
 *
 * @author trungdk
 * @see PaymentRequestImpl
 * @see org.oep.core.dossiermgt.model.PaymentRequest
 * @see org.oep.core.dossiermgt.model.PaymentRequestModel
 * @generated
 */
@JSON(strict = true)
public class PaymentRequestModelImpl extends BaseModelImpl<PaymentRequest>
	implements PaymentRequestModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payment request model instance should use the {@link org.oep.core.dossiermgt.model.PaymentRequest} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_paymentrequest";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "paymentRequestId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizationId", Types.BIGINT },
			{ "dossierId", Types.BIGINT },
			{ "govAgentId", Types.VARCHAR },
			{ "govAgentName", Types.VARCHAR },
			{ "subjectId", Types.VARCHAR },
			{ "subjectType", Types.VARCHAR },
			{ "subjectName", Types.VARCHAR },
			{ "amount", Types.BIGINT },
			{ "requestNote", Types.VARCHAR },
			{ "paymentFileId", Types.BIGINT },
			{ "confirmOK", Types.INTEGER },
			{ "ebMessageId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_paymentrequest (uuid_ VARCHAR(75) null,paymentRequestId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,organizationId LONG,dossierId LONG,govAgentId VARCHAR(30) null,govAgentName VARCHAR(200) null,subjectId VARCHAR(30) null,subjectType VARCHAR(30) null,subjectName VARCHAR(100) null,amount LONG,requestNote VARCHAR(200) null,paymentFileId LONG,confirmOK INTEGER,ebMessageId LONG)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_paymentrequest";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentRequest.paymentRequestId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_paymentrequest.paymentRequestId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.dossiermgt.model.PaymentRequest"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.dossiermgt.model.PaymentRequest"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.core.dossiermgt.model.PaymentRequest"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long PAYMENTREQUESTID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PaymentRequest toModel(PaymentRequestSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PaymentRequest model = new PaymentRequestImpl();

		model.setUuid(soapModel.getUuid());
		model.setPaymentRequestId(soapModel.getPaymentRequestId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setDossierId(soapModel.getDossierId());
		model.setGovAgentId(soapModel.getGovAgentId());
		model.setGovAgentName(soapModel.getGovAgentName());
		model.setSubjectId(soapModel.getSubjectId());
		model.setSubjectType(soapModel.getSubjectType());
		model.setSubjectName(soapModel.getSubjectName());
		model.setAmount(soapModel.getAmount());
		model.setRequestNote(soapModel.getRequestNote());
		model.setPaymentFileId(soapModel.getPaymentFileId());
		model.setConfirmOK(soapModel.getConfirmOK());
		model.setEbMessageId(soapModel.getEbMessageId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PaymentRequest> toModels(PaymentRequestSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PaymentRequest> models = new ArrayList<PaymentRequest>(soapModels.length);

		for (PaymentRequestSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.dossiermgt.model.PaymentRequest"));

	public PaymentRequestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _paymentRequestId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPaymentRequestId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paymentRequestId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PaymentRequest.class;
	}

	@Override
	public String getModelClassName() {
		return PaymentRequest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("paymentRequestId", getPaymentRequestId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("dossierId", getDossierId());
		attributes.put("govAgentId", getGovAgentId());
		attributes.put("govAgentName", getGovAgentName());
		attributes.put("subjectId", getSubjectId());
		attributes.put("subjectType", getSubjectType());
		attributes.put("subjectName", getSubjectName());
		attributes.put("amount", getAmount());
		attributes.put("requestNote", getRequestNote());
		attributes.put("paymentFileId", getPaymentFileId());
		attributes.put("confirmOK", getConfirmOK());
		attributes.put("ebMessageId", getEbMessageId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long paymentRequestId = (Long)attributes.get("paymentRequestId");

		if (paymentRequestId != null) {
			setPaymentRequestId(paymentRequestId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		String govAgentId = (String)attributes.get("govAgentId");

		if (govAgentId != null) {
			setGovAgentId(govAgentId);
		}

		String govAgentName = (String)attributes.get("govAgentName");

		if (govAgentName != null) {
			setGovAgentName(govAgentName);
		}

		String subjectId = (String)attributes.get("subjectId");

		if (subjectId != null) {
			setSubjectId(subjectId);
		}

		String subjectType = (String)attributes.get("subjectType");

		if (subjectType != null) {
			setSubjectType(subjectType);
		}

		String subjectName = (String)attributes.get("subjectName");

		if (subjectName != null) {
			setSubjectName(subjectName);
		}

		Long amount = (Long)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String requestNote = (String)attributes.get("requestNote");

		if (requestNote != null) {
			setRequestNote(requestNote);
		}

		Long paymentFileId = (Long)attributes.get("paymentFileId");

		if (paymentFileId != null) {
			setPaymentFileId(paymentFileId);
		}

		Integer confirmOK = (Integer)attributes.get("confirmOK");

		if (confirmOK != null) {
			setConfirmOK(confirmOK);
		}

		Long ebMessageId = (Long)attributes.get("ebMessageId");

		if (ebMessageId != null) {
			setEbMessageId(ebMessageId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getPaymentRequestId() {
		return _paymentRequestId;
	}

	@Override
	public void setPaymentRequestId(long paymentRequestId) {
		_paymentRequestId = paymentRequestId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@JSON
	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_dossierId = dossierId;
	}

	@JSON
	@Override
	public String getGovAgentId() {
		if (_govAgentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgentId;
		}
	}

	@Override
	public void setGovAgentId(String govAgentId) {
		_govAgentId = govAgentId;
	}

	@JSON
	@Override
	public String getGovAgentName() {
		if (_govAgentName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgentName;
		}
	}

	@Override
	public void setGovAgentName(String govAgentName) {
		_govAgentName = govAgentName;
	}

	@JSON
	@Override
	public String getSubjectId() {
		if (_subjectId == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectId;
		}
	}

	@Override
	public void setSubjectId(String subjectId) {
		_subjectId = subjectId;
	}

	@JSON
	@Override
	public String getSubjectType() {
		if (_subjectType == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectType;
		}
	}

	@Override
	public void setSubjectType(String subjectType) {
		_subjectType = subjectType;
	}

	@JSON
	@Override
	public String getSubjectName() {
		if (_subjectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectName;
		}
	}

	@Override
	public void setSubjectName(String subjectName) {
		_subjectName = subjectName;
	}

	@JSON
	@Override
	public long getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(long amount) {
		_amount = amount;
	}

	@JSON
	@Override
	public String getRequestNote() {
		if (_requestNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _requestNote;
		}
	}

	@Override
	public void setRequestNote(String requestNote) {
		_requestNote = requestNote;
	}

	@JSON
	@Override
	public long getPaymentFileId() {
		return _paymentFileId;
	}

	@Override
	public void setPaymentFileId(long paymentFileId) {
		_paymentFileId = paymentFileId;
	}

	@JSON
	@Override
	public int getConfirmOK() {
		return _confirmOK;
	}

	@Override
	public void setConfirmOK(int confirmOK) {
		_confirmOK = confirmOK;
	}

	@JSON
	@Override
	public long getEbMessageId() {
		return _ebMessageId;
	}

	@Override
	public void setEbMessageId(long ebMessageId) {
		_ebMessageId = ebMessageId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PaymentRequest.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PaymentRequest.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PaymentRequest toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PaymentRequest)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PaymentRequestImpl paymentRequestImpl = new PaymentRequestImpl();

		paymentRequestImpl.setUuid(getUuid());
		paymentRequestImpl.setPaymentRequestId(getPaymentRequestId());
		paymentRequestImpl.setUserId(getUserId());
		paymentRequestImpl.setGroupId(getGroupId());
		paymentRequestImpl.setCompanyId(getCompanyId());
		paymentRequestImpl.setCreateDate(getCreateDate());
		paymentRequestImpl.setModifiedDate(getModifiedDate());
		paymentRequestImpl.setOrganizationId(getOrganizationId());
		paymentRequestImpl.setDossierId(getDossierId());
		paymentRequestImpl.setGovAgentId(getGovAgentId());
		paymentRequestImpl.setGovAgentName(getGovAgentName());
		paymentRequestImpl.setSubjectId(getSubjectId());
		paymentRequestImpl.setSubjectType(getSubjectType());
		paymentRequestImpl.setSubjectName(getSubjectName());
		paymentRequestImpl.setAmount(getAmount());
		paymentRequestImpl.setRequestNote(getRequestNote());
		paymentRequestImpl.setPaymentFileId(getPaymentFileId());
		paymentRequestImpl.setConfirmOK(getConfirmOK());
		paymentRequestImpl.setEbMessageId(getEbMessageId());

		paymentRequestImpl.resetOriginalValues();

		return paymentRequestImpl;
	}

	@Override
	public int compareTo(PaymentRequest paymentRequest) {
		long primaryKey = paymentRequest.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PaymentRequest)) {
			return false;
		}

		PaymentRequest paymentRequest = (PaymentRequest)obj;

		long primaryKey = paymentRequest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PaymentRequestModelImpl paymentRequestModelImpl = this;

		paymentRequestModelImpl._originalUuid = paymentRequestModelImpl._uuid;

		paymentRequestModelImpl._originalGroupId = paymentRequestModelImpl._groupId;

		paymentRequestModelImpl._setOriginalGroupId = false;

		paymentRequestModelImpl._originalCompanyId = paymentRequestModelImpl._companyId;

		paymentRequestModelImpl._setOriginalCompanyId = false;

		paymentRequestModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PaymentRequest> toCacheModel() {
		PaymentRequestCacheModel paymentRequestCacheModel = new PaymentRequestCacheModel();

		paymentRequestCacheModel.uuid = getUuid();

		String uuid = paymentRequestCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			paymentRequestCacheModel.uuid = null;
		}

		paymentRequestCacheModel.paymentRequestId = getPaymentRequestId();

		paymentRequestCacheModel.userId = getUserId();

		paymentRequestCacheModel.groupId = getGroupId();

		paymentRequestCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			paymentRequestCacheModel.createDate = createDate.getTime();
		}
		else {
			paymentRequestCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			paymentRequestCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			paymentRequestCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		paymentRequestCacheModel.organizationId = getOrganizationId();

		paymentRequestCacheModel.dossierId = getDossierId();

		paymentRequestCacheModel.govAgentId = getGovAgentId();

		String govAgentId = paymentRequestCacheModel.govAgentId;

		if ((govAgentId != null) && (govAgentId.length() == 0)) {
			paymentRequestCacheModel.govAgentId = null;
		}

		paymentRequestCacheModel.govAgentName = getGovAgentName();

		String govAgentName = paymentRequestCacheModel.govAgentName;

		if ((govAgentName != null) && (govAgentName.length() == 0)) {
			paymentRequestCacheModel.govAgentName = null;
		}

		paymentRequestCacheModel.subjectId = getSubjectId();

		String subjectId = paymentRequestCacheModel.subjectId;

		if ((subjectId != null) && (subjectId.length() == 0)) {
			paymentRequestCacheModel.subjectId = null;
		}

		paymentRequestCacheModel.subjectType = getSubjectType();

		String subjectType = paymentRequestCacheModel.subjectType;

		if ((subjectType != null) && (subjectType.length() == 0)) {
			paymentRequestCacheModel.subjectType = null;
		}

		paymentRequestCacheModel.subjectName = getSubjectName();

		String subjectName = paymentRequestCacheModel.subjectName;

		if ((subjectName != null) && (subjectName.length() == 0)) {
			paymentRequestCacheModel.subjectName = null;
		}

		paymentRequestCacheModel.amount = getAmount();

		paymentRequestCacheModel.requestNote = getRequestNote();

		String requestNote = paymentRequestCacheModel.requestNote;

		if ((requestNote != null) && (requestNote.length() == 0)) {
			paymentRequestCacheModel.requestNote = null;
		}

		paymentRequestCacheModel.paymentFileId = getPaymentFileId();

		paymentRequestCacheModel.confirmOK = getConfirmOK();

		paymentRequestCacheModel.ebMessageId = getEbMessageId();

		return paymentRequestCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", paymentRequestId=");
		sb.append(getPaymentRequestId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", govAgentId=");
		sb.append(getGovAgentId());
		sb.append(", govAgentName=");
		sb.append(getGovAgentName());
		sb.append(", subjectId=");
		sb.append(getSubjectId());
		sb.append(", subjectType=");
		sb.append(getSubjectType());
		sb.append(", subjectName=");
		sb.append(getSubjectName());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", requestNote=");
		sb.append(getRequestNote());
		sb.append(", paymentFileId=");
		sb.append(getPaymentFileId());
		sb.append(", confirmOK=");
		sb.append(getConfirmOK());
		sb.append(", ebMessageId=");
		sb.append(getEbMessageId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.dossiermgt.model.PaymentRequest");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentRequestId</column-name><column-value><![CDATA[");
		sb.append(getPaymentRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgentId</column-name><column-value><![CDATA[");
		sb.append(getGovAgentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgentName</column-name><column-value><![CDATA[");
		sb.append(getGovAgentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectId</column-name><column-value><![CDATA[");
		sb.append(getSubjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectType</column-name><column-value><![CDATA[");
		sb.append(getSubjectType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectName</column-name><column-value><![CDATA[");
		sb.append(getSubjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestNote</column-name><column-value><![CDATA[");
		sb.append(getRequestNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFileId</column-name><column-value><![CDATA[");
		sb.append(getPaymentFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>confirmOK</column-name><column-value><![CDATA[");
		sb.append(getConfirmOK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ebMessageId</column-name><column-value><![CDATA[");
		sb.append(getEbMessageId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PaymentRequest.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PaymentRequest.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _paymentRequestId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _organizationId;
	private long _dossierId;
	private String _govAgentId;
	private String _govAgentName;
	private String _subjectId;
	private String _subjectType;
	private String _subjectName;
	private long _amount;
	private String _requestNote;
	private long _paymentFileId;
	private int _confirmOK;
	private long _ebMessageId;
	private long _columnBitmask;
	private PaymentRequest _escapedModel;
}