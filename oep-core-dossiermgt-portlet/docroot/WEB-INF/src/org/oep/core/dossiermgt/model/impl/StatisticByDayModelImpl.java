/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.dossiermgt.model.StatisticByDay;
import org.oep.core.dossiermgt.model.StatisticByDayModel;
import org.oep.core.dossiermgt.model.StatisticByDaySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the StatisticByDay service. Represents a row in the &quot;oep_dossiermgt_statisticbyday&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.dossiermgt.model.StatisticByDayModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StatisticByDayImpl}.
 * </p>
 *
 * @author trungdk
 * @see StatisticByDayImpl
 * @see org.oep.core.dossiermgt.model.StatisticByDay
 * @see org.oep.core.dossiermgt.model.StatisticByDayModel
 * @generated
 */
@JSON(strict = true)
public class StatisticByDayModelImpl extends BaseModelImpl<StatisticByDay>
	implements StatisticByDayModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a statistic by day model instance should use the {@link org.oep.core.dossiermgt.model.StatisticByDay} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_statisticbyday";
	public static final Object[][] TABLE_COLUMNS = {
			{ "statisticByDayId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "statisticDate", Types.TIMESTAMP },
			{ "statisticWeek", Types.INTEGER },
			{ "submittedNumber", Types.INTEGER },
			{ "acceptedNumber", Types.INTEGER },
			{ "deniedNumber", Types.INTEGER },
			{ "acceptedRatio", Types.DOUBLE },
			{ "finishedNumber", Types.INTEGER },
			{ "ontimeNumber", Types.INTEGER },
			{ "delayedNumber", Types.INTEGER },
			{ "ontimeRatio", Types.DOUBLE },
			{ "doneNumber", Types.INTEGER },
			{ "doneRatio", Types.DOUBLE },
			{ "delayDaysAvg", Types.DOUBLE },
			{ "furtherDaysAvg", Types.DOUBLE }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_statisticbyday (statisticByDayId LONG not null primary key,groupId LONG,companyId LONG,createDate DATE null,statisticDate DATE null,statisticWeek INTEGER,submittedNumber INTEGER,acceptedNumber INTEGER,deniedNumber INTEGER,acceptedRatio DOUBLE,finishedNumber INTEGER,ontimeNumber INTEGER,delayedNumber INTEGER,ontimeRatio DOUBLE,doneNumber INTEGER,doneRatio DOUBLE,delayDaysAvg DOUBLE,furtherDaysAvg DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_statisticbyday";
	public static final String ORDER_BY_JPQL = " ORDER BY statisticByDay.statisticByDayId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_statisticbyday.statisticByDayId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.dossiermgt.model.StatisticByDay"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.dossiermgt.model.StatisticByDay"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static StatisticByDay toModel(StatisticByDaySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		StatisticByDay model = new StatisticByDayImpl();

		model.setStatisticByDayId(soapModel.getStatisticByDayId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setStatisticDate(soapModel.getStatisticDate());
		model.setStatisticWeek(soapModel.getStatisticWeek());
		model.setSubmittedNumber(soapModel.getSubmittedNumber());
		model.setAcceptedNumber(soapModel.getAcceptedNumber());
		model.setDeniedNumber(soapModel.getDeniedNumber());
		model.setAcceptedRatio(soapModel.getAcceptedRatio());
		model.setFinishedNumber(soapModel.getFinishedNumber());
		model.setOntimeNumber(soapModel.getOntimeNumber());
		model.setDelayedNumber(soapModel.getDelayedNumber());
		model.setOntimeRatio(soapModel.getOntimeRatio());
		model.setDoneNumber(soapModel.getDoneNumber());
		model.setDoneRatio(soapModel.getDoneRatio());
		model.setDelayDaysAvg(soapModel.getDelayDaysAvg());
		model.setFurtherDaysAvg(soapModel.getFurtherDaysAvg());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<StatisticByDay> toModels(StatisticByDaySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<StatisticByDay> models = new ArrayList<StatisticByDay>(soapModels.length);

		for (StatisticByDaySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.dossiermgt.model.StatisticByDay"));

	public StatisticByDayModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _statisticByDayId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStatisticByDayId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _statisticByDayId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StatisticByDay.class;
	}

	@Override
	public String getModelClassName() {
		return StatisticByDay.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("statisticByDayId", getStatisticByDayId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("statisticDate", getStatisticDate());
		attributes.put("statisticWeek", getStatisticWeek());
		attributes.put("submittedNumber", getSubmittedNumber());
		attributes.put("acceptedNumber", getAcceptedNumber());
		attributes.put("deniedNumber", getDeniedNumber());
		attributes.put("acceptedRatio", getAcceptedRatio());
		attributes.put("finishedNumber", getFinishedNumber());
		attributes.put("ontimeNumber", getOntimeNumber());
		attributes.put("delayedNumber", getDelayedNumber());
		attributes.put("ontimeRatio", getOntimeRatio());
		attributes.put("doneNumber", getDoneNumber());
		attributes.put("doneRatio", getDoneRatio());
		attributes.put("delayDaysAvg", getDelayDaysAvg());
		attributes.put("furtherDaysAvg", getFurtherDaysAvg());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long statisticByDayId = (Long)attributes.get("statisticByDayId");

		if (statisticByDayId != null) {
			setStatisticByDayId(statisticByDayId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date statisticDate = (Date)attributes.get("statisticDate");

		if (statisticDate != null) {
			setStatisticDate(statisticDate);
		}

		Integer statisticWeek = (Integer)attributes.get("statisticWeek");

		if (statisticWeek != null) {
			setStatisticWeek(statisticWeek);
		}

		Integer submittedNumber = (Integer)attributes.get("submittedNumber");

		if (submittedNumber != null) {
			setSubmittedNumber(submittedNumber);
		}

		Integer acceptedNumber = (Integer)attributes.get("acceptedNumber");

		if (acceptedNumber != null) {
			setAcceptedNumber(acceptedNumber);
		}

		Integer deniedNumber = (Integer)attributes.get("deniedNumber");

		if (deniedNumber != null) {
			setDeniedNumber(deniedNumber);
		}

		Double acceptedRatio = (Double)attributes.get("acceptedRatio");

		if (acceptedRatio != null) {
			setAcceptedRatio(acceptedRatio);
		}

		Integer finishedNumber = (Integer)attributes.get("finishedNumber");

		if (finishedNumber != null) {
			setFinishedNumber(finishedNumber);
		}

		Integer ontimeNumber = (Integer)attributes.get("ontimeNumber");

		if (ontimeNumber != null) {
			setOntimeNumber(ontimeNumber);
		}

		Integer delayedNumber = (Integer)attributes.get("delayedNumber");

		if (delayedNumber != null) {
			setDelayedNumber(delayedNumber);
		}

		Double ontimeRatio = (Double)attributes.get("ontimeRatio");

		if (ontimeRatio != null) {
			setOntimeRatio(ontimeRatio);
		}

		Integer doneNumber = (Integer)attributes.get("doneNumber");

		if (doneNumber != null) {
			setDoneNumber(doneNumber);
		}

		Double doneRatio = (Double)attributes.get("doneRatio");

		if (doneRatio != null) {
			setDoneRatio(doneRatio);
		}

		Double delayDaysAvg = (Double)attributes.get("delayDaysAvg");

		if (delayDaysAvg != null) {
			setDelayDaysAvg(delayDaysAvg);
		}

		Double furtherDaysAvg = (Double)attributes.get("furtherDaysAvg");

		if (furtherDaysAvg != null) {
			setFurtherDaysAvg(furtherDaysAvg);
		}
	}

	@JSON
	@Override
	public long getStatisticByDayId() {
		return _statisticByDayId;
	}

	@Override
	public void setStatisticByDayId(long statisticByDayId) {
		_statisticByDayId = statisticByDayId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getStatisticDate() {
		return _statisticDate;
	}

	@Override
	public void setStatisticDate(Date statisticDate) {
		_statisticDate = statisticDate;
	}

	@JSON
	@Override
	public int getStatisticWeek() {
		return _statisticWeek;
	}

	@Override
	public void setStatisticWeek(int statisticWeek) {
		_statisticWeek = statisticWeek;
	}

	@JSON
	@Override
	public int getSubmittedNumber() {
		return _submittedNumber;
	}

	@Override
	public void setSubmittedNumber(int submittedNumber) {
		_submittedNumber = submittedNumber;
	}

	@JSON
	@Override
	public int getAcceptedNumber() {
		return _acceptedNumber;
	}

	@Override
	public void setAcceptedNumber(int acceptedNumber) {
		_acceptedNumber = acceptedNumber;
	}

	@JSON
	@Override
	public int getDeniedNumber() {
		return _deniedNumber;
	}

	@Override
	public void setDeniedNumber(int deniedNumber) {
		_deniedNumber = deniedNumber;
	}

	@JSON
	@Override
	public double getAcceptedRatio() {
		return _acceptedRatio;
	}

	@Override
	public void setAcceptedRatio(double acceptedRatio) {
		_acceptedRatio = acceptedRatio;
	}

	@JSON
	@Override
	public int getFinishedNumber() {
		return _finishedNumber;
	}

	@Override
	public void setFinishedNumber(int finishedNumber) {
		_finishedNumber = finishedNumber;
	}

	@JSON
	@Override
	public int getOntimeNumber() {
		return _ontimeNumber;
	}

	@Override
	public void setOntimeNumber(int ontimeNumber) {
		_ontimeNumber = ontimeNumber;
	}

	@JSON
	@Override
	public int getDelayedNumber() {
		return _delayedNumber;
	}

	@Override
	public void setDelayedNumber(int delayedNumber) {
		_delayedNumber = delayedNumber;
	}

	@JSON
	@Override
	public double getOntimeRatio() {
		return _ontimeRatio;
	}

	@Override
	public void setOntimeRatio(double ontimeRatio) {
		_ontimeRatio = ontimeRatio;
	}

	@JSON
	@Override
	public int getDoneNumber() {
		return _doneNumber;
	}

	@Override
	public void setDoneNumber(int doneNumber) {
		_doneNumber = doneNumber;
	}

	@JSON
	@Override
	public double getDoneRatio() {
		return _doneRatio;
	}

	@Override
	public void setDoneRatio(double doneRatio) {
		_doneRatio = doneRatio;
	}

	@JSON
	@Override
	public double getDelayDaysAvg() {
		return _delayDaysAvg;
	}

	@Override
	public void setDelayDaysAvg(double delayDaysAvg) {
		_delayDaysAvg = delayDaysAvg;
	}

	@JSON
	@Override
	public double getFurtherDaysAvg() {
		return _furtherDaysAvg;
	}

	@Override
	public void setFurtherDaysAvg(double furtherDaysAvg) {
		_furtherDaysAvg = furtherDaysAvg;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			StatisticByDay.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StatisticByDay toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StatisticByDay)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StatisticByDayImpl statisticByDayImpl = new StatisticByDayImpl();

		statisticByDayImpl.setStatisticByDayId(getStatisticByDayId());
		statisticByDayImpl.setGroupId(getGroupId());
		statisticByDayImpl.setCompanyId(getCompanyId());
		statisticByDayImpl.setCreateDate(getCreateDate());
		statisticByDayImpl.setStatisticDate(getStatisticDate());
		statisticByDayImpl.setStatisticWeek(getStatisticWeek());
		statisticByDayImpl.setSubmittedNumber(getSubmittedNumber());
		statisticByDayImpl.setAcceptedNumber(getAcceptedNumber());
		statisticByDayImpl.setDeniedNumber(getDeniedNumber());
		statisticByDayImpl.setAcceptedRatio(getAcceptedRatio());
		statisticByDayImpl.setFinishedNumber(getFinishedNumber());
		statisticByDayImpl.setOntimeNumber(getOntimeNumber());
		statisticByDayImpl.setDelayedNumber(getDelayedNumber());
		statisticByDayImpl.setOntimeRatio(getOntimeRatio());
		statisticByDayImpl.setDoneNumber(getDoneNumber());
		statisticByDayImpl.setDoneRatio(getDoneRatio());
		statisticByDayImpl.setDelayDaysAvg(getDelayDaysAvg());
		statisticByDayImpl.setFurtherDaysAvg(getFurtherDaysAvg());

		statisticByDayImpl.resetOriginalValues();

		return statisticByDayImpl;
	}

	@Override
	public int compareTo(StatisticByDay statisticByDay) {
		long primaryKey = statisticByDay.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StatisticByDay)) {
			return false;
		}

		StatisticByDay statisticByDay = (StatisticByDay)obj;

		long primaryKey = statisticByDay.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<StatisticByDay> toCacheModel() {
		StatisticByDayCacheModel statisticByDayCacheModel = new StatisticByDayCacheModel();

		statisticByDayCacheModel.statisticByDayId = getStatisticByDayId();

		statisticByDayCacheModel.groupId = getGroupId();

		statisticByDayCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			statisticByDayCacheModel.createDate = createDate.getTime();
		}
		else {
			statisticByDayCacheModel.createDate = Long.MIN_VALUE;
		}

		Date statisticDate = getStatisticDate();

		if (statisticDate != null) {
			statisticByDayCacheModel.statisticDate = statisticDate.getTime();
		}
		else {
			statisticByDayCacheModel.statisticDate = Long.MIN_VALUE;
		}

		statisticByDayCacheModel.statisticWeek = getStatisticWeek();

		statisticByDayCacheModel.submittedNumber = getSubmittedNumber();

		statisticByDayCacheModel.acceptedNumber = getAcceptedNumber();

		statisticByDayCacheModel.deniedNumber = getDeniedNumber();

		statisticByDayCacheModel.acceptedRatio = getAcceptedRatio();

		statisticByDayCacheModel.finishedNumber = getFinishedNumber();

		statisticByDayCacheModel.ontimeNumber = getOntimeNumber();

		statisticByDayCacheModel.delayedNumber = getDelayedNumber();

		statisticByDayCacheModel.ontimeRatio = getOntimeRatio();

		statisticByDayCacheModel.doneNumber = getDoneNumber();

		statisticByDayCacheModel.doneRatio = getDoneRatio();

		statisticByDayCacheModel.delayDaysAvg = getDelayDaysAvg();

		statisticByDayCacheModel.furtherDaysAvg = getFurtherDaysAvg();

		return statisticByDayCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{statisticByDayId=");
		sb.append(getStatisticByDayId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", statisticDate=");
		sb.append(getStatisticDate());
		sb.append(", statisticWeek=");
		sb.append(getStatisticWeek());
		sb.append(", submittedNumber=");
		sb.append(getSubmittedNumber());
		sb.append(", acceptedNumber=");
		sb.append(getAcceptedNumber());
		sb.append(", deniedNumber=");
		sb.append(getDeniedNumber());
		sb.append(", acceptedRatio=");
		sb.append(getAcceptedRatio());
		sb.append(", finishedNumber=");
		sb.append(getFinishedNumber());
		sb.append(", ontimeNumber=");
		sb.append(getOntimeNumber());
		sb.append(", delayedNumber=");
		sb.append(getDelayedNumber());
		sb.append(", ontimeRatio=");
		sb.append(getOntimeRatio());
		sb.append(", doneNumber=");
		sb.append(getDoneNumber());
		sb.append(", doneRatio=");
		sb.append(getDoneRatio());
		sb.append(", delayDaysAvg=");
		sb.append(getDelayDaysAvg());
		sb.append(", furtherDaysAvg=");
		sb.append(getFurtherDaysAvg());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.dossiermgt.model.StatisticByDay");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>statisticByDayId</column-name><column-value><![CDATA[");
		sb.append(getStatisticByDayId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statisticDate</column-name><column-value><![CDATA[");
		sb.append(getStatisticDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>statisticWeek</column-name><column-value><![CDATA[");
		sb.append(getStatisticWeek());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>submittedNumber</column-name><column-value><![CDATA[");
		sb.append(getSubmittedNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acceptedNumber</column-name><column-value><![CDATA[");
		sb.append(getAcceptedNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deniedNumber</column-name><column-value><![CDATA[");
		sb.append(getDeniedNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acceptedRatio</column-name><column-value><![CDATA[");
		sb.append(getAcceptedRatio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>finishedNumber</column-name><column-value><![CDATA[");
		sb.append(getFinishedNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ontimeNumber</column-name><column-value><![CDATA[");
		sb.append(getOntimeNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>delayedNumber</column-name><column-value><![CDATA[");
		sb.append(getDelayedNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ontimeRatio</column-name><column-value><![CDATA[");
		sb.append(getOntimeRatio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doneNumber</column-name><column-value><![CDATA[");
		sb.append(getDoneNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>doneRatio</column-name><column-value><![CDATA[");
		sb.append(getDoneRatio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>delayDaysAvg</column-name><column-value><![CDATA[");
		sb.append(getDelayDaysAvg());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>furtherDaysAvg</column-name><column-value><![CDATA[");
		sb.append(getFurtherDaysAvg());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = StatisticByDay.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			StatisticByDay.class
		};
	private long _statisticByDayId;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private Date _statisticDate;
	private int _statisticWeek;
	private int _submittedNumber;
	private int _acceptedNumber;
	private int _deniedNumber;
	private double _acceptedRatio;
	private int _finishedNumber;
	private int _ontimeNumber;
	private int _delayedNumber;
	private double _ontimeRatio;
	private int _doneNumber;
	private double _doneRatio;
	private double _delayDaysAvg;
	private double _furtherDaysAvg;
	private StatisticByDay _escapedModel;
}