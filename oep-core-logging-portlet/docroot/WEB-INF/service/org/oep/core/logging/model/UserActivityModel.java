/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.logging.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the UserActivity service. Represents a row in the &quot;oep_logging_useractivity&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.oep.core.logging.model.impl.UserActivityModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.oep.core.logging.model.impl.UserActivityImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UserActivity
 * @see org.oep.core.logging.model.impl.UserActivityImpl
 * @see org.oep.core.logging.model.impl.UserActivityModelImpl
 * @generated
 */
public interface UserActivityModel extends BaseModel<UserActivity> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a user activity model instance should use the {@link UserActivity} interface instead.
	 */

	/**
	 * Returns the primary key of this user activity.
	 *
	 * @return the primary key of this user activity
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this user activity.
	 *
	 * @param primaryKey the primary key of this user activity
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this user activity.
	 *
	 * @return the ID of this user activity
	 */
	public long getId();

	/**
	 * Sets the ID of this user activity.
	 *
	 * @param id the ID of this user activity
	 */
	public void setId(long id);

	/**
	 * Returns the user ID of this user activity.
	 *
	 * @return the user ID of this user activity
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this user activity.
	 *
	 * @param userId the user ID of this user activity
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this user activity.
	 *
	 * @return the user uuid of this user activity
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this user activity.
	 *
	 * @param userUuid the user uuid of this user activity
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the group ID of this user activity.
	 *
	 * @return the group ID of this user activity
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this user activity.
	 *
	 * @param groupId the group ID of this user activity
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this user activity.
	 *
	 * @return the company ID of this user activity
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this user activity.
	 *
	 * @param companyId the company ID of this user activity
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this user activity.
	 *
	 * @return the create date of this user activity
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this user activity.
	 *
	 * @param createDate the create date of this user activity
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the user name of this user activity.
	 *
	 * @return the user name of this user activity
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this user activity.
	 *
	 * @param userName the user name of this user activity
	 */
	public void setUserName(String userName);

	/**
	 * Returns the email of this user activity.
	 *
	 * @return the email of this user activity
	 */
	@AutoEscape
	public String getEmail();

	/**
	 * Sets the email of this user activity.
	 *
	 * @param email the email of this user activity
	 */
	public void setEmail(String email);

	/**
	 * Returns the site of this user activity.
	 *
	 * @return the site of this user activity
	 */
	@AutoEscape
	public String getSite();

	/**
	 * Sets the site of this user activity.
	 *
	 * @param site the site of this user activity
	 */
	public void setSite(String site);

	/**
	 * Returns the page of this user activity.
	 *
	 * @return the page of this user activity
	 */
	@AutoEscape
	public String getPage();

	/**
	 * Sets the page of this user activity.
	 *
	 * @param page the page of this user activity
	 */
	public void setPage(String page);

	/**
	 * Returns the action of this user activity.
	 *
	 * @return the action of this user activity
	 */
	@AutoEscape
	public String getAction();

	/**
	 * Sets the action of this user activity.
	 *
	 * @param action the action of this user activity
	 */
	public void setAction(String action);

	/**
	 * Returns the description of this user activity.
	 *
	 * @return the description of this user activity
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this user activity.
	 *
	 * @param description the description of this user activity
	 */
	public void setDescription(String description);

	/**
	 * Returns the url of this user activity.
	 *
	 * @return the url of this user activity
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this user activity.
	 *
	 * @param url the url of this user activity
	 */
	public void setUrl(String url);

	/**
	 * Returns the session ID of this user activity.
	 *
	 * @return the session ID of this user activity
	 */
	@AutoEscape
	public String getSessionId();

	/**
	 * Sets the session ID of this user activity.
	 *
	 * @param sessionId the session ID of this user activity
	 */
	public void setSessionId(String sessionId);

	/**
	 * Returns the ip of this user activity.
	 *
	 * @return the ip of this user activity
	 */
	@AutoEscape
	public String getIp();

	/**
	 * Sets the ip of this user activity.
	 *
	 * @param ip the ip of this user activity
	 */
	public void setIp(String ip);

	/**
	 * Returns the user agent of this user activity.
	 *
	 * @return the user agent of this user activity
	 */
	@AutoEscape
	public String getUserAgent();

	/**
	 * Sets the user agent of this user activity.
	 *
	 * @param userAgent the user agent of this user activity
	 */
	public void setUserAgent(String userAgent);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(UserActivity userActivity);

	@Override
	public int hashCode();

	@Override
	public CacheModel<UserActivity> toCacheModel();

	@Override
	public UserActivity toEscapedModel();

	@Override
	public UserActivity toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}