/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.dossiermgt.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.oep.dossiermgt.service.persistence.DossierFolder2RolePK;

import java.io.Serializable;

/**
 * The base model interface for the DossierFolder2Role service. Represents a row in the &quot;oep_dossiermgt_dossierfolder2role&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.oep.dossiermgt.model.impl.DossierFolder2RoleModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.oep.dossiermgt.model.impl.DossierFolder2RoleImpl}.
 * </p>
 *
 * @author trungdk
 * @see DossierFolder2Role
 * @see org.oep.dossiermgt.model.impl.DossierFolder2RoleImpl
 * @see org.oep.dossiermgt.model.impl.DossierFolder2RoleModelImpl
 * @generated
 */
public interface DossierFolder2RoleModel extends BaseModel<DossierFolder2Role> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dossier folder2 role model instance should use the {@link DossierFolder2Role} interface instead.
	 */

	/**
	 * Returns the primary key of this dossier folder2 role.
	 *
	 * @return the primary key of this dossier folder2 role
	 */
	public DossierFolder2RolePK getPrimaryKey();

	/**
	 * Sets the primary key of this dossier folder2 role.
	 *
	 * @param primaryKey the primary key of this dossier folder2 role
	 */
	public void setPrimaryKey(DossierFolder2RolePK primaryKey);

	/**
	 * Returns the dossier folder ID of this dossier folder2 role.
	 *
	 * @return the dossier folder ID of this dossier folder2 role
	 */
	public long getDossierFolderId();

	/**
	 * Sets the dossier folder ID of this dossier folder2 role.
	 *
	 * @param dossierFolderId the dossier folder ID of this dossier folder2 role
	 */
	public void setDossierFolderId(long dossierFolderId);

	/**
	 * Returns the role ID of this dossier folder2 role.
	 *
	 * @return the role ID of this dossier folder2 role
	 */
	public long getRoleId();

	/**
	 * Sets the role ID of this dossier folder2 role.
	 *
	 * @param roleId the role ID of this dossier folder2 role
	 */
	public void setRoleId(long roleId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DossierFolder2Role dossierFolder2Role);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DossierFolder2Role> toCacheModel();

	@Override
	public DossierFolder2Role toEscapedModel();

	@Override
	public DossierFolder2Role toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}