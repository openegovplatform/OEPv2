/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.dossiermgt.model.EbPartnerShip;
import org.oep.dossiermgt.model.EbPartnerShipModel;
import org.oep.dossiermgt.model.EbPartnerShipSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EbPartnerShip service. Represents a row in the &quot;oep_dossiermgt_ebpartnership&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.dossiermgt.model.EbPartnerShipModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EbPartnerShipImpl}.
 * </p>
 *
 * @author trungdk
 * @see EbPartnerShipImpl
 * @see org.oep.dossiermgt.model.EbPartnerShip
 * @see org.oep.dossiermgt.model.EbPartnerShipModel
 * @generated
 */
@JSON(strict = true)
public class EbPartnerShipModelImpl extends BaseModelImpl<EbPartnerShip>
	implements EbPartnerShipModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a eb partner ship model instance should use the {@link org.oep.dossiermgt.model.EbPartnerShip} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_ebpartnership";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ebPartnerShipId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "name", Types.VARCHAR },
			{ "cpaId", Types.VARCHAR },
			{ "service", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_ebpartnership (ebPartnerShipId LONG not null primary key,companyId LONG,userId LONG,groupId LONG,createDate DATE null,name VARCHAR(100) null,cpaId VARCHAR(100) null,service VARCHAR(100) null)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_ebpartnership";
	public static final String ORDER_BY_JPQL = " ORDER BY ebPartnerShip.ebPartnerShipId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_ebpartnership.ebPartnerShipId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.dossiermgt.model.EbPartnerShip"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.dossiermgt.model.EbPartnerShip"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EbPartnerShip toModel(EbPartnerShipSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EbPartnerShip model = new EbPartnerShipImpl();

		model.setEbPartnerShipId(soapModel.getEbPartnerShipId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setName(soapModel.getName());
		model.setCpaId(soapModel.getCpaId());
		model.setService(soapModel.getService());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EbPartnerShip> toModels(EbPartnerShipSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EbPartnerShip> models = new ArrayList<EbPartnerShip>(soapModels.length);

		for (EbPartnerShipSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.dossiermgt.model.EbPartnerShip"));

	public EbPartnerShipModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _ebPartnerShipId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEbPartnerShipId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ebPartnerShipId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EbPartnerShip.class;
	}

	@Override
	public String getModelClassName() {
		return EbPartnerShip.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("ebPartnerShipId", getEbPartnerShipId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("createDate", getCreateDate());
		attributes.put("name", getName());
		attributes.put("cpaId", getCpaId());
		attributes.put("service", getService());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long ebPartnerShipId = (Long)attributes.get("ebPartnerShipId");

		if (ebPartnerShipId != null) {
			setEbPartnerShipId(ebPartnerShipId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String cpaId = (String)attributes.get("cpaId");

		if (cpaId != null) {
			setCpaId(cpaId);
		}

		String service = (String)attributes.get("service");

		if (service != null) {
			setService(service);
		}
	}

	@JSON
	@Override
	public long getEbPartnerShipId() {
		return _ebPartnerShipId;
	}

	@Override
	public void setEbPartnerShipId(long ebPartnerShipId) {
		_ebPartnerShipId = ebPartnerShipId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getCpaId() {
		if (_cpaId == null) {
			return StringPool.BLANK;
		}
		else {
			return _cpaId;
		}
	}

	@Override
	public void setCpaId(String cpaId) {
		_cpaId = cpaId;
	}

	@JSON
	@Override
	public String getService() {
		if (_service == null) {
			return StringPool.BLANK;
		}
		else {
			return _service;
		}
	}

	@Override
	public void setService(String service) {
		_service = service;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EbPartnerShip.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EbPartnerShip toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EbPartnerShip)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EbPartnerShipImpl ebPartnerShipImpl = new EbPartnerShipImpl();

		ebPartnerShipImpl.setEbPartnerShipId(getEbPartnerShipId());
		ebPartnerShipImpl.setCompanyId(getCompanyId());
		ebPartnerShipImpl.setUserId(getUserId());
		ebPartnerShipImpl.setGroupId(getGroupId());
		ebPartnerShipImpl.setCreateDate(getCreateDate());
		ebPartnerShipImpl.setName(getName());
		ebPartnerShipImpl.setCpaId(getCpaId());
		ebPartnerShipImpl.setService(getService());

		ebPartnerShipImpl.resetOriginalValues();

		return ebPartnerShipImpl;
	}

	@Override
	public int compareTo(EbPartnerShip ebPartnerShip) {
		long primaryKey = ebPartnerShip.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EbPartnerShip)) {
			return false;
		}

		EbPartnerShip ebPartnerShip = (EbPartnerShip)obj;

		long primaryKey = ebPartnerShip.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<EbPartnerShip> toCacheModel() {
		EbPartnerShipCacheModel ebPartnerShipCacheModel = new EbPartnerShipCacheModel();

		ebPartnerShipCacheModel.ebPartnerShipId = getEbPartnerShipId();

		ebPartnerShipCacheModel.companyId = getCompanyId();

		ebPartnerShipCacheModel.userId = getUserId();

		ebPartnerShipCacheModel.groupId = getGroupId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			ebPartnerShipCacheModel.createDate = createDate.getTime();
		}
		else {
			ebPartnerShipCacheModel.createDate = Long.MIN_VALUE;
		}

		ebPartnerShipCacheModel.name = getName();

		String name = ebPartnerShipCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			ebPartnerShipCacheModel.name = null;
		}

		ebPartnerShipCacheModel.cpaId = getCpaId();

		String cpaId = ebPartnerShipCacheModel.cpaId;

		if ((cpaId != null) && (cpaId.length() == 0)) {
			ebPartnerShipCacheModel.cpaId = null;
		}

		ebPartnerShipCacheModel.service = getService();

		String service = ebPartnerShipCacheModel.service;

		if ((service != null) && (service.length() == 0)) {
			ebPartnerShipCacheModel.service = null;
		}

		return ebPartnerShipCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{ebPartnerShipId=");
		sb.append(getEbPartnerShipId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", cpaId=");
		sb.append(getCpaId());
		sb.append(", service=");
		sb.append(getService());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("org.oep.dossiermgt.model.EbPartnerShip");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>ebPartnerShipId</column-name><column-value><![CDATA[");
		sb.append(getEbPartnerShipId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cpaId</column-name><column-value><![CDATA[");
		sb.append(getCpaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>service</column-name><column-value><![CDATA[");
		sb.append(getService());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EbPartnerShip.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EbPartnerShip.class
		};
	private long _ebPartnerShipId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private Date _createDate;
	private String _name;
	private String _cpaId;
	private String _service;
	private EbPartnerShip _escapedModel;
}