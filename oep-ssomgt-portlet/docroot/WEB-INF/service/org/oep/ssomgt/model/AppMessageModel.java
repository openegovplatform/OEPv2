/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.ssomgt.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AppMessage service. Represents a row in the &quot;oep_usermgt_appmessage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.oep.ssomgt.model.impl.AppMessageModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.oep.ssomgt.model.impl.AppMessageImpl}.
 * </p>
 *
 * @author trungdk
 * @see AppMessage
 * @see org.oep.ssomgt.model.impl.AppMessageImpl
 * @see org.oep.ssomgt.model.impl.AppMessageModelImpl
 * @generated
 */
public interface AppMessageModel extends BaseModel<AppMessage> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a app message model instance should use the {@link AppMessage} interface instead.
	 */

	/**
	 * Returns the primary key of this app message.
	 *
	 * @return the primary key of this app message
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this app message.
	 *
	 * @param primaryKey the primary key of this app message
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the app message ID of this app message.
	 *
	 * @return the app message ID of this app message
	 */
	public long getAppMessageId();

	/**
	 * Sets the app message ID of this app message.
	 *
	 * @param appMessageId the app message ID of this app message
	 */
	public void setAppMessageId(long appMessageId);

	/**
	 * Returns the user ID of this app message.
	 *
	 * @return the user ID of this app message
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this app message.
	 *
	 * @param userId the user ID of this app message
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this app message.
	 *
	 * @return the user uuid of this app message
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this app message.
	 *
	 * @param userUuid the user uuid of this app message
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the group ID of this app message.
	 *
	 * @return the group ID of this app message
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this app message.
	 *
	 * @param groupId the group ID of this app message
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this app message.
	 *
	 * @return the company ID of this app message
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this app message.
	 *
	 * @param companyId the company ID of this app message
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this app message.
	 *
	 * @return the create date of this app message
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this app message.
	 *
	 * @param createDate the create date of this app message
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the from application of this app message.
	 *
	 * @return the from application of this app message
	 */
	@AutoEscape
	public String getFromApplication();

	/**
	 * Sets the from application of this app message.
	 *
	 * @param fromApplication the from application of this app message
	 */
	public void setFromApplication(String fromApplication);

	/**
	 * Returns the to user of this app message.
	 *
	 * @return the to user of this app message
	 */
	@AutoEscape
	public String getToUser();

	/**
	 * Sets the to user of this app message.
	 *
	 * @param toUser the to user of this app message
	 */
	public void setToUser(String toUser);

	/**
	 * Returns the message type of this app message.
	 *
	 * @return the message type of this app message
	 */
	@AutoEscape
	public String getMessageType();

	/**
	 * Sets the message type of this app message.
	 *
	 * @param messageType the message type of this app message
	 */
	public void setMessageType(String messageType);

	/**
	 * Returns the message code of this app message.
	 *
	 * @return the message code of this app message
	 */
	@AutoEscape
	public String getMessageCode();

	/**
	 * Sets the message code of this app message.
	 *
	 * @param messageCode the message code of this app message
	 */
	public void setMessageCode(String messageCode);

	/**
	 * Returns the message text of this app message.
	 *
	 * @return the message text of this app message
	 */
	@AutoEscape
	public String getMessageText();

	/**
	 * Sets the message text of this app message.
	 *
	 * @param messageText the message text of this app message
	 */
	public void setMessageText(String messageText);

	/**
	 * Returns the message value of this app message.
	 *
	 * @return the message value of this app message
	 */
	@AutoEscape
	public String getMessageValue();

	/**
	 * Sets the message value of this app message.
	 *
	 * @param messageValue the message value of this app message
	 */
	public void setMessageValue(String messageValue);

	/**
	 * Returns the message url of this app message.
	 *
	 * @return the message url of this app message
	 */
	@AutoEscape
	public String getMessageUrl();

	/**
	 * Sets the message url of this app message.
	 *
	 * @param messageUrl the message url of this app message
	 */
	public void setMessageUrl(String messageUrl);

	/**
	 * Returns the visit date of this app message.
	 *
	 * @return the visit date of this app message
	 */
	public Date getVisitDate();

	/**
	 * Sets the visit date of this app message.
	 *
	 * @param visitDate the visit date of this app message
	 */
	public void setVisitDate(Date visitDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(AppMessage appMessage);

	@Override
	public int hashCode();

	@Override
	public CacheModel<AppMessage> toCacheModel();

	@Override
	public AppMessage toEscapedModel();

	@Override
	public AppMessage toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}