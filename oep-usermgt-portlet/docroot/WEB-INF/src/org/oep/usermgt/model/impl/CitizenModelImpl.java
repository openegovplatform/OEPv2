/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.usermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.usermgt.model.Citizen;
import org.oep.usermgt.model.CitizenModel;
import org.oep.usermgt.model.CitizenSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Citizen service. Represents a row in the &quot;oep_usermgt_citizen&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.usermgt.model.CitizenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CitizenImpl}.
 * </p>
 *
 * @author NQMINH
 * @see CitizenImpl
 * @see org.oep.usermgt.model.Citizen
 * @see org.oep.usermgt.model.CitizenModel
 * @generated
 */
@JSON(strict = true)
public class CitizenModelImpl extends BaseModelImpl<Citizen>
	implements CitizenModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a citizen model instance should use the {@link org.oep.usermgt.model.Citizen} interface instead.
	 */
	public static final String TABLE_NAME = "oep_usermgt_citizen";
	public static final Object[][] TABLE_COLUMNS = {
			{ "citizenId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "mappingUserId", Types.BIGINT },
			{ "citizenNo", Types.VARCHAR },
			{ "fullName", Types.VARCHAR },
			{ "gender", Types.INTEGER },
			{ "identificationNo", Types.VARCHAR },
			{ "address", Types.VARCHAR },
			{ "cityNo", Types.VARCHAR },
			{ "cityName", Types.VARCHAR },
			{ "districtNo", Types.VARCHAR },
			{ "districtName", Types.VARCHAR },
			{ "wardNo", Types.VARCHAR },
			{ "wardName", Types.VARCHAR },
			{ "homeAddress", Types.VARCHAR },
			{ "homeTel", Types.VARCHAR },
			{ "mobile", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "shortName", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_usermgt_citizen (citizenId LONG not null primary key,companyId LONG,userId LONG,groupId LONG,createDate DATE null,modifiedDate DATE null,mappingUserId LONG,citizenNo VARCHAR(75) null,fullName VARCHAR(75) null,gender INTEGER,identificationNo VARCHAR(75) null,address VARCHAR(75) null,cityNo VARCHAR(75) null,cityName VARCHAR(75) null,districtNo VARCHAR(75) null,districtName VARCHAR(75) null,wardNo VARCHAR(75) null,wardName VARCHAR(75) null,homeAddress VARCHAR(75) null,homeTel VARCHAR(75) null,mobile VARCHAR(75) null,email VARCHAR(75) null,shortName VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table oep_usermgt_citizen";
	public static final String ORDER_BY_JPQL = " ORDER BY citizen.citizenId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_usermgt_citizen.citizenId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.usermgt.model.Citizen"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.usermgt.model.Citizen"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.usermgt.model.Citizen"),
			true);
	public static long CITYNO_COLUMN_BITMASK = 1L;
	public static long DISTRICTNO_COLUMN_BITMASK = 2L;
	public static long IDENTIFICATIONNO_COLUMN_BITMASK = 4L;
	public static long MAPPINGUSERID_COLUMN_BITMASK = 8L;
	public static long WARDNO_COLUMN_BITMASK = 16L;
	public static long CITIZENID_COLUMN_BITMASK = 32L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Citizen toModel(CitizenSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Citizen model = new CitizenImpl();

		model.setCitizenId(soapModel.getCitizenId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setMappingUserId(soapModel.getMappingUserId());
		model.setCitizenNo(soapModel.getCitizenNo());
		model.setFullName(soapModel.getFullName());
		model.setGender(soapModel.getGender());
		model.setIdentificationNo(soapModel.getIdentificationNo());
		model.setAddress(soapModel.getAddress());
		model.setCityNo(soapModel.getCityNo());
		model.setCityName(soapModel.getCityName());
		model.setDistrictNo(soapModel.getDistrictNo());
		model.setDistrictName(soapModel.getDistrictName());
		model.setWardNo(soapModel.getWardNo());
		model.setWardName(soapModel.getWardName());
		model.setHomeAddress(soapModel.getHomeAddress());
		model.setHomeTel(soapModel.getHomeTel());
		model.setMobile(soapModel.getMobile());
		model.setEmail(soapModel.getEmail());
		model.setShortName(soapModel.getShortName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Citizen> toModels(CitizenSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Citizen> models = new ArrayList<Citizen>(soapModels.length);

		for (CitizenSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.usermgt.model.Citizen"));

	public CitizenModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _citizenId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCitizenId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _citizenId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Citizen.class;
	}

	@Override
	public String getModelClassName() {
		return Citizen.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("citizenId", getCitizenId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("mappingUserId", getMappingUserId());
		attributes.put("citizenNo", getCitizenNo());
		attributes.put("fullName", getFullName());
		attributes.put("gender", getGender());
		attributes.put("identificationNo", getIdentificationNo());
		attributes.put("address", getAddress());
		attributes.put("cityNo", getCityNo());
		attributes.put("cityName", getCityName());
		attributes.put("districtNo", getDistrictNo());
		attributes.put("districtName", getDistrictName());
		attributes.put("wardNo", getWardNo());
		attributes.put("wardName", getWardName());
		attributes.put("homeAddress", getHomeAddress());
		attributes.put("homeTel", getHomeTel());
		attributes.put("mobile", getMobile());
		attributes.put("email", getEmail());
		attributes.put("shortName", getShortName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long citizenId = (Long)attributes.get("citizenId");

		if (citizenId != null) {
			setCitizenId(citizenId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long mappingUserId = (Long)attributes.get("mappingUserId");

		if (mappingUserId != null) {
			setMappingUserId(mappingUserId);
		}

		String citizenNo = (String)attributes.get("citizenNo");

		if (citizenNo != null) {
			setCitizenNo(citizenNo);
		}

		String fullName = (String)attributes.get("fullName");

		if (fullName != null) {
			setFullName(fullName);
		}

		Integer gender = (Integer)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String identificationNo = (String)attributes.get("identificationNo");

		if (identificationNo != null) {
			setIdentificationNo(identificationNo);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String cityNo = (String)attributes.get("cityNo");

		if (cityNo != null) {
			setCityNo(cityNo);
		}

		String cityName = (String)attributes.get("cityName");

		if (cityName != null) {
			setCityName(cityName);
		}

		String districtNo = (String)attributes.get("districtNo");

		if (districtNo != null) {
			setDistrictNo(districtNo);
		}

		String districtName = (String)attributes.get("districtName");

		if (districtName != null) {
			setDistrictName(districtName);
		}

		String wardNo = (String)attributes.get("wardNo");

		if (wardNo != null) {
			setWardNo(wardNo);
		}

		String wardName = (String)attributes.get("wardName");

		if (wardName != null) {
			setWardName(wardName);
		}

		String homeAddress = (String)attributes.get("homeAddress");

		if (homeAddress != null) {
			setHomeAddress(homeAddress);
		}

		String homeTel = (String)attributes.get("homeTel");

		if (homeTel != null) {
			setHomeTel(homeTel);
		}

		String mobile = (String)attributes.get("mobile");

		if (mobile != null) {
			setMobile(mobile);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String shortName = (String)attributes.get("shortName");

		if (shortName != null) {
			setShortName(shortName);
		}
	}

	@JSON
	@Override
	public long getCitizenId() {
		return _citizenId;
	}

	@Override
	public void setCitizenId(long citizenId) {
		_citizenId = citizenId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getMappingUserId() {
		return _mappingUserId;
	}

	@Override
	public void setMappingUserId(long mappingUserId) {
		_columnBitmask |= MAPPINGUSERID_COLUMN_BITMASK;

		if (!_setOriginalMappingUserId) {
			_setOriginalMappingUserId = true;

			_originalMappingUserId = _mappingUserId;
		}

		_mappingUserId = mappingUserId;
	}

	@Override
	public String getMappingUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getMappingUserId(), "uuid",
			_mappingUserUuid);
	}

	@Override
	public void setMappingUserUuid(String mappingUserUuid) {
		_mappingUserUuid = mappingUserUuid;
	}

	public long getOriginalMappingUserId() {
		return _originalMappingUserId;
	}

	@JSON
	@Override
	public String getCitizenNo() {
		if (_citizenNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _citizenNo;
		}
	}

	@Override
	public void setCitizenNo(String citizenNo) {
		_citizenNo = citizenNo;
	}

	@JSON
	@Override
	public String getFullName() {
		if (_fullName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fullName;
		}
	}

	@Override
	public void setFullName(String fullName) {
		_fullName = fullName;
	}

	@JSON
	@Override
	public int getGender() {
		return _gender;
	}

	@Override
	public void setGender(int gender) {
		_gender = gender;
	}

	@JSON
	@Override
	public String getIdentificationNo() {
		if (_identificationNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _identificationNo;
		}
	}

	@Override
	public void setIdentificationNo(String identificationNo) {
		_columnBitmask |= IDENTIFICATIONNO_COLUMN_BITMASK;

		if (_originalIdentificationNo == null) {
			_originalIdentificationNo = _identificationNo;
		}

		_identificationNo = identificationNo;
	}

	public String getOriginalIdentificationNo() {
		return GetterUtil.getString(_originalIdentificationNo);
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	@Override
	public String getCityNo() {
		if (_cityNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityNo;
		}
	}

	@Override
	public void setCityNo(String cityNo) {
		_columnBitmask |= CITYNO_COLUMN_BITMASK;

		if (_originalCityNo == null) {
			_originalCityNo = _cityNo;
		}

		_cityNo = cityNo;
	}

	public String getOriginalCityNo() {
		return GetterUtil.getString(_originalCityNo);
	}

	@JSON
	@Override
	public String getCityName() {
		if (_cityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityName;
		}
	}

	@Override
	public void setCityName(String cityName) {
		_cityName = cityName;
	}

	@JSON
	@Override
	public String getDistrictNo() {
		if (_districtNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtNo;
		}
	}

	@Override
	public void setDistrictNo(String districtNo) {
		_columnBitmask |= DISTRICTNO_COLUMN_BITMASK;

		if (_originalDistrictNo == null) {
			_originalDistrictNo = _districtNo;
		}

		_districtNo = districtNo;
	}

	public String getOriginalDistrictNo() {
		return GetterUtil.getString(_originalDistrictNo);
	}

	@JSON
	@Override
	public String getDistrictName() {
		if (_districtName == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtName;
		}
	}

	@Override
	public void setDistrictName(String districtName) {
		_districtName = districtName;
	}

	@JSON
	@Override
	public String getWardNo() {
		if (_wardNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardNo;
		}
	}

	@Override
	public void setWardNo(String wardNo) {
		_columnBitmask |= WARDNO_COLUMN_BITMASK;

		if (_originalWardNo == null) {
			_originalWardNo = _wardNo;
		}

		_wardNo = wardNo;
	}

	public String getOriginalWardNo() {
		return GetterUtil.getString(_originalWardNo);
	}

	@JSON
	@Override
	public String getWardName() {
		if (_wardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardName;
		}
	}

	@Override
	public void setWardName(String wardName) {
		_wardName = wardName;
	}

	@JSON
	@Override
	public String getHomeAddress() {
		if (_homeAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _homeAddress;
		}
	}

	@Override
	public void setHomeAddress(String homeAddress) {
		_homeAddress = homeAddress;
	}

	@JSON
	@Override
	public String getHomeTel() {
		if (_homeTel == null) {
			return StringPool.BLANK;
		}
		else {
			return _homeTel;
		}
	}

	@Override
	public void setHomeTel(String homeTel) {
		_homeTel = homeTel;
	}

	@JSON
	@Override
	public String getMobile() {
		if (_mobile == null) {
			return StringPool.BLANK;
		}
		else {
			return _mobile;
		}
	}

	@Override
	public void setMobile(String mobile) {
		_mobile = mobile;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getShortName() {
		if (_shortName == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortName;
		}
	}

	@Override
	public void setShortName(String shortName) {
		_shortName = shortName;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Citizen.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Citizen toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Citizen)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CitizenImpl citizenImpl = new CitizenImpl();

		citizenImpl.setCitizenId(getCitizenId());
		citizenImpl.setCompanyId(getCompanyId());
		citizenImpl.setUserId(getUserId());
		citizenImpl.setGroupId(getGroupId());
		citizenImpl.setCreateDate(getCreateDate());
		citizenImpl.setModifiedDate(getModifiedDate());
		citizenImpl.setMappingUserId(getMappingUserId());
		citizenImpl.setCitizenNo(getCitizenNo());
		citizenImpl.setFullName(getFullName());
		citizenImpl.setGender(getGender());
		citizenImpl.setIdentificationNo(getIdentificationNo());
		citizenImpl.setAddress(getAddress());
		citizenImpl.setCityNo(getCityNo());
		citizenImpl.setCityName(getCityName());
		citizenImpl.setDistrictNo(getDistrictNo());
		citizenImpl.setDistrictName(getDistrictName());
		citizenImpl.setWardNo(getWardNo());
		citizenImpl.setWardName(getWardName());
		citizenImpl.setHomeAddress(getHomeAddress());
		citizenImpl.setHomeTel(getHomeTel());
		citizenImpl.setMobile(getMobile());
		citizenImpl.setEmail(getEmail());
		citizenImpl.setShortName(getShortName());

		citizenImpl.resetOriginalValues();

		return citizenImpl;
	}

	@Override
	public int compareTo(Citizen citizen) {
		long primaryKey = citizen.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Citizen)) {
			return false;
		}

		Citizen citizen = (Citizen)obj;

		long primaryKey = citizen.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CitizenModelImpl citizenModelImpl = this;

		citizenModelImpl._originalMappingUserId = citizenModelImpl._mappingUserId;

		citizenModelImpl._setOriginalMappingUserId = false;

		citizenModelImpl._originalIdentificationNo = citizenModelImpl._identificationNo;

		citizenModelImpl._originalCityNo = citizenModelImpl._cityNo;

		citizenModelImpl._originalDistrictNo = citizenModelImpl._districtNo;

		citizenModelImpl._originalWardNo = citizenModelImpl._wardNo;

		citizenModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Citizen> toCacheModel() {
		CitizenCacheModel citizenCacheModel = new CitizenCacheModel();

		citizenCacheModel.citizenId = getCitizenId();

		citizenCacheModel.companyId = getCompanyId();

		citizenCacheModel.userId = getUserId();

		citizenCacheModel.groupId = getGroupId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			citizenCacheModel.createDate = createDate.getTime();
		}
		else {
			citizenCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			citizenCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			citizenCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		citizenCacheModel.mappingUserId = getMappingUserId();

		citizenCacheModel.citizenNo = getCitizenNo();

		String citizenNo = citizenCacheModel.citizenNo;

		if ((citizenNo != null) && (citizenNo.length() == 0)) {
			citizenCacheModel.citizenNo = null;
		}

		citizenCacheModel.fullName = getFullName();

		String fullName = citizenCacheModel.fullName;

		if ((fullName != null) && (fullName.length() == 0)) {
			citizenCacheModel.fullName = null;
		}

		citizenCacheModel.gender = getGender();

		citizenCacheModel.identificationNo = getIdentificationNo();

		String identificationNo = citizenCacheModel.identificationNo;

		if ((identificationNo != null) && (identificationNo.length() == 0)) {
			citizenCacheModel.identificationNo = null;
		}

		citizenCacheModel.address = getAddress();

		String address = citizenCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			citizenCacheModel.address = null;
		}

		citizenCacheModel.cityNo = getCityNo();

		String cityNo = citizenCacheModel.cityNo;

		if ((cityNo != null) && (cityNo.length() == 0)) {
			citizenCacheModel.cityNo = null;
		}

		citizenCacheModel.cityName = getCityName();

		String cityName = citizenCacheModel.cityName;

		if ((cityName != null) && (cityName.length() == 0)) {
			citizenCacheModel.cityName = null;
		}

		citizenCacheModel.districtNo = getDistrictNo();

		String districtNo = citizenCacheModel.districtNo;

		if ((districtNo != null) && (districtNo.length() == 0)) {
			citizenCacheModel.districtNo = null;
		}

		citizenCacheModel.districtName = getDistrictName();

		String districtName = citizenCacheModel.districtName;

		if ((districtName != null) && (districtName.length() == 0)) {
			citizenCacheModel.districtName = null;
		}

		citizenCacheModel.wardNo = getWardNo();

		String wardNo = citizenCacheModel.wardNo;

		if ((wardNo != null) && (wardNo.length() == 0)) {
			citizenCacheModel.wardNo = null;
		}

		citizenCacheModel.wardName = getWardName();

		String wardName = citizenCacheModel.wardName;

		if ((wardName != null) && (wardName.length() == 0)) {
			citizenCacheModel.wardName = null;
		}

		citizenCacheModel.homeAddress = getHomeAddress();

		String homeAddress = citizenCacheModel.homeAddress;

		if ((homeAddress != null) && (homeAddress.length() == 0)) {
			citizenCacheModel.homeAddress = null;
		}

		citizenCacheModel.homeTel = getHomeTel();

		String homeTel = citizenCacheModel.homeTel;

		if ((homeTel != null) && (homeTel.length() == 0)) {
			citizenCacheModel.homeTel = null;
		}

		citizenCacheModel.mobile = getMobile();

		String mobile = citizenCacheModel.mobile;

		if ((mobile != null) && (mobile.length() == 0)) {
			citizenCacheModel.mobile = null;
		}

		citizenCacheModel.email = getEmail();

		String email = citizenCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			citizenCacheModel.email = null;
		}

		citizenCacheModel.shortName = getShortName();

		String shortName = citizenCacheModel.shortName;

		if ((shortName != null) && (shortName.length() == 0)) {
			citizenCacheModel.shortName = null;
		}

		return citizenCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{citizenId=");
		sb.append(getCitizenId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", mappingUserId=");
		sb.append(getMappingUserId());
		sb.append(", citizenNo=");
		sb.append(getCitizenNo());
		sb.append(", fullName=");
		sb.append(getFullName());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", identificationNo=");
		sb.append(getIdentificationNo());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", cityNo=");
		sb.append(getCityNo());
		sb.append(", cityName=");
		sb.append(getCityName());
		sb.append(", districtNo=");
		sb.append(getDistrictNo());
		sb.append(", districtName=");
		sb.append(getDistrictName());
		sb.append(", wardNo=");
		sb.append(getWardNo());
		sb.append(", wardName=");
		sb.append(getWardName());
		sb.append(", homeAddress=");
		sb.append(getHomeAddress());
		sb.append(", homeTel=");
		sb.append(getHomeTel());
		sb.append(", mobile=");
		sb.append(getMobile());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", shortName=");
		sb.append(getShortName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("org.oep.usermgt.model.Citizen");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>citizenId</column-name><column-value><![CDATA[");
		sb.append(getCitizenId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mappingUserId</column-name><column-value><![CDATA[");
		sb.append(getMappingUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>citizenNo</column-name><column-value><![CDATA[");
		sb.append(getCitizenNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fullName</column-name><column-value><![CDATA[");
		sb.append(getFullName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identificationNo</column-name><column-value><![CDATA[");
		sb.append(getIdentificationNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityNo</column-name><column-value><![CDATA[");
		sb.append(getCityNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityName</column-name><column-value><![CDATA[");
		sb.append(getCityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtNo</column-name><column-value><![CDATA[");
		sb.append(getDistrictNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtName</column-name><column-value><![CDATA[");
		sb.append(getDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardNo</column-name><column-value><![CDATA[");
		sb.append(getWardNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardName</column-name><column-value><![CDATA[");
		sb.append(getWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>homeAddress</column-name><column-value><![CDATA[");
		sb.append(getHomeAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>homeTel</column-name><column-value><![CDATA[");
		sb.append(getHomeTel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mobile</column-name><column-value><![CDATA[");
		sb.append(getMobile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortName</column-name><column-value><![CDATA[");
		sb.append(getShortName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Citizen.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Citizen.class
		};
	private long _citizenId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _mappingUserId;
	private String _mappingUserUuid;
	private long _originalMappingUserId;
	private boolean _setOriginalMappingUserId;
	private String _citizenNo;
	private String _fullName;
	private int _gender;
	private String _identificationNo;
	private String _originalIdentificationNo;
	private String _address;
	private String _cityNo;
	private String _originalCityNo;
	private String _cityName;
	private String _districtNo;
	private String _originalDistrictNo;
	private String _districtName;
	private String _wardNo;
	private String _originalWardNo;
	private String _wardName;
	private String _homeAddress;
	private String _homeTel;
	private String _mobile;
	private String _email;
	private String _shortName;
	private long _columnBitmask;
	private Citizen _escapedModel;
}