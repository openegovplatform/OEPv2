/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.usermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.usermgt.model.WorkingUnit;
import org.oep.usermgt.model.WorkingUnitModel;
import org.oep.usermgt.model.WorkingUnitSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WorkingUnit service. Represents a row in the &quot;oep_usermgt_workingunit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.usermgt.model.WorkingUnitModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkingUnitImpl}.
 * </p>
 *
 * @author NQMINH
 * @see WorkingUnitImpl
 * @see org.oep.usermgt.model.WorkingUnit
 * @see org.oep.usermgt.model.WorkingUnitModel
 * @generated
 */
@JSON(strict = true)
public class WorkingUnitModelImpl extends BaseModelImpl<WorkingUnit>
	implements WorkingUnitModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a Working Unit model instance should use the {@link org.oep.usermgt.model.WorkingUnit} interface instead.
	 */
	public static final String TABLE_NAME = "oep_usermgt_workingunit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "workingUnitId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizationId", Types.BIGINT },
			{ "govAgencyId", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "enName", Types.VARCHAR },
			{ "parentWorkingUnitId", Types.BIGINT },
			{ "address", Types.VARCHAR },
			{ "cityNo", Types.VARCHAR },
			{ "cityName", Types.VARCHAR },
			{ "districtNo", Types.VARCHAR },
			{ "districtName", Types.VARCHAR },
			{ "wardNo", Types.VARCHAR },
			{ "wardName", Types.VARCHAR },
			{ "gpsPosition", Types.VARCHAR },
			{ "telNo", Types.VARCHAR },
			{ "fax", Types.VARCHAR },
			{ "email", Types.VARCHAR },
			{ "website", Types.VARCHAR },
			{ "aaa", Types.VARCHAR },
			{ "shortName", Types.VARCHAR },
			{ "localSiteId", Types.BIGINT },
			{ "isEmployer", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_usermgt_workingunit (workingUnitId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,organizationId LONG,govAgencyId VARCHAR(75) null,name VARCHAR(75) null,enName VARCHAR(75) null,parentWorkingUnitId LONG,address VARCHAR(75) null,cityNo VARCHAR(75) null,cityName VARCHAR(75) null,districtNo VARCHAR(75) null,districtName VARCHAR(75) null,wardNo VARCHAR(75) null,wardName VARCHAR(75) null,gpsPosition VARCHAR(75) null,telNo VARCHAR(75) null,fax VARCHAR(75) null,email VARCHAR(75) null,website VARCHAR(75) null,aaa VARCHAR(75) null,shortName VARCHAR(75) null,localSiteId LONG,isEmployer INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table oep_usermgt_workingunit";
	public static final String ORDER_BY_JPQL = " ORDER BY workingUnit.workingUnitId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_usermgt_workingunit.workingUnitId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.usermgt.model.WorkingUnit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.usermgt.model.WorkingUnit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.usermgt.model.WorkingUnit"),
			true);
	public static long CITYNO_COLUMN_BITMASK = 1L;
	public static long COMPANYID_COLUMN_BITMASK = 2L;
	public static long DISTRICTNO_COLUMN_BITMASK = 4L;
	public static long GOVAGENCYID_COLUMN_BITMASK = 8L;
	public static long GROUPID_COLUMN_BITMASK = 16L;
	public static long ISEMPLOYER_COLUMN_BITMASK = 32L;
	public static long LOCALSITEID_COLUMN_BITMASK = 64L;
	public static long ORGANIZATIONID_COLUMN_BITMASK = 128L;
	public static long PARENTWORKINGUNITID_COLUMN_BITMASK = 256L;
	public static long WARDNO_COLUMN_BITMASK = 512L;
	public static long WORKINGUNITID_COLUMN_BITMASK = 1024L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WorkingUnit toModel(WorkingUnitSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WorkingUnit model = new WorkingUnitImpl();

		model.setWorkingUnitId(soapModel.getWorkingUnitId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setGovAgencyId(soapModel.getGovAgencyId());
		model.setName(soapModel.getName());
		model.setEnName(soapModel.getEnName());
		model.setParentWorkingUnitId(soapModel.getParentWorkingUnitId());
		model.setAddress(soapModel.getAddress());
		model.setCityNo(soapModel.getCityNo());
		model.setCityName(soapModel.getCityName());
		model.setDistrictNo(soapModel.getDistrictNo());
		model.setDistrictName(soapModel.getDistrictName());
		model.setWardNo(soapModel.getWardNo());
		model.setWardName(soapModel.getWardName());
		model.setGpsPosition(soapModel.getGpsPosition());
		model.setTelNo(soapModel.getTelNo());
		model.setFax(soapModel.getFax());
		model.setEmail(soapModel.getEmail());
		model.setWebsite(soapModel.getWebsite());
		model.setAaa(soapModel.getAaa());
		model.setShortName(soapModel.getShortName());
		model.setLocalSiteId(soapModel.getLocalSiteId());
		model.setIsEmployer(soapModel.getIsEmployer());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WorkingUnit> toModels(WorkingUnitSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WorkingUnit> models = new ArrayList<WorkingUnit>(soapModels.length);

		for (WorkingUnitSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.usermgt.model.WorkingUnit"));

	public WorkingUnitModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workingUnitId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkingUnitId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workingUnitId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkingUnit.class;
	}

	@Override
	public String getModelClassName() {
		return WorkingUnit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("workingUnitId", getWorkingUnitId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("govAgencyId", getGovAgencyId());
		attributes.put("name", getName());
		attributes.put("enName", getEnName());
		attributes.put("parentWorkingUnitId", getParentWorkingUnitId());
		attributes.put("address", getAddress());
		attributes.put("cityNo", getCityNo());
		attributes.put("cityName", getCityName());
		attributes.put("districtNo", getDistrictNo());
		attributes.put("districtName", getDistrictName());
		attributes.put("wardNo", getWardNo());
		attributes.put("wardName", getWardName());
		attributes.put("gpsPosition", getGpsPosition());
		attributes.put("telNo", getTelNo());
		attributes.put("fax", getFax());
		attributes.put("email", getEmail());
		attributes.put("website", getWebsite());
		attributes.put("aaa", getAaa());
		attributes.put("shortName", getShortName());
		attributes.put("localSiteId", getLocalSiteId());
		attributes.put("isEmployer", getIsEmployer());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long workingUnitId = (Long)attributes.get("workingUnitId");

		if (workingUnitId != null) {
			setWorkingUnitId(workingUnitId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String govAgencyId = (String)attributes.get("govAgencyId");

		if (govAgencyId != null) {
			setGovAgencyId(govAgencyId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String enName = (String)attributes.get("enName");

		if (enName != null) {
			setEnName(enName);
		}

		Long parentWorkingUnitId = (Long)attributes.get("parentWorkingUnitId");

		if (parentWorkingUnitId != null) {
			setParentWorkingUnitId(parentWorkingUnitId);
		}

		String address = (String)attributes.get("address");

		if (address != null) {
			setAddress(address);
		}

		String cityNo = (String)attributes.get("cityNo");

		if (cityNo != null) {
			setCityNo(cityNo);
		}

		String cityName = (String)attributes.get("cityName");

		if (cityName != null) {
			setCityName(cityName);
		}

		String districtNo = (String)attributes.get("districtNo");

		if (districtNo != null) {
			setDistrictNo(districtNo);
		}

		String districtName = (String)attributes.get("districtName");

		if (districtName != null) {
			setDistrictName(districtName);
		}

		String wardNo = (String)attributes.get("wardNo");

		if (wardNo != null) {
			setWardNo(wardNo);
		}

		String wardName = (String)attributes.get("wardName");

		if (wardName != null) {
			setWardName(wardName);
		}

		String gpsPosition = (String)attributes.get("gpsPosition");

		if (gpsPosition != null) {
			setGpsPosition(gpsPosition);
		}

		String telNo = (String)attributes.get("telNo");

		if (telNo != null) {
			setTelNo(telNo);
		}

		String fax = (String)attributes.get("fax");

		if (fax != null) {
			setFax(fax);
		}

		String email = (String)attributes.get("email");

		if (email != null) {
			setEmail(email);
		}

		String website = (String)attributes.get("website");

		if (website != null) {
			setWebsite(website);
		}

		String aaa = (String)attributes.get("aaa");

		if (aaa != null) {
			setAaa(aaa);
		}

		String shortName = (String)attributes.get("shortName");

		if (shortName != null) {
			setShortName(shortName);
		}

		Long localSiteId = (Long)attributes.get("localSiteId");

		if (localSiteId != null) {
			setLocalSiteId(localSiteId);
		}

		Integer isEmployer = (Integer)attributes.get("isEmployer");

		if (isEmployer != null) {
			setIsEmployer(isEmployer);
		}
	}

	@JSON
	@Override
	public long getWorkingUnitId() {
		return _workingUnitId;
	}

	@Override
	public void setWorkingUnitId(long workingUnitId) {
		_workingUnitId = workingUnitId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_columnBitmask |= ORGANIZATIONID_COLUMN_BITMASK;

		if (!_setOriginalOrganizationId) {
			_setOriginalOrganizationId = true;

			_originalOrganizationId = _organizationId;
		}

		_organizationId = organizationId;
	}

	public long getOriginalOrganizationId() {
		return _originalOrganizationId;
	}

	@JSON
	@Override
	public String getGovAgencyId() {
		if (_govAgencyId == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyId;
		}
	}

	@Override
	public void setGovAgencyId(String govAgencyId) {
		_columnBitmask |= GOVAGENCYID_COLUMN_BITMASK;

		if (_originalGovAgencyId == null) {
			_originalGovAgencyId = _govAgencyId;
		}

		_govAgencyId = govAgencyId;
	}

	public String getOriginalGovAgencyId() {
		return GetterUtil.getString(_originalGovAgencyId);
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getEnName() {
		if (_enName == null) {
			return StringPool.BLANK;
		}
		else {
			return _enName;
		}
	}

	@Override
	public void setEnName(String enName) {
		_enName = enName;
	}

	@JSON
	@Override
	public long getParentWorkingUnitId() {
		return _parentWorkingUnitId;
	}

	@Override
	public void setParentWorkingUnitId(long parentWorkingUnitId) {
		_columnBitmask |= PARENTWORKINGUNITID_COLUMN_BITMASK;

		if (!_setOriginalParentWorkingUnitId) {
			_setOriginalParentWorkingUnitId = true;

			_originalParentWorkingUnitId = _parentWorkingUnitId;
		}

		_parentWorkingUnitId = parentWorkingUnitId;
	}

	public long getOriginalParentWorkingUnitId() {
		return _originalParentWorkingUnitId;
	}

	@JSON
	@Override
	public String getAddress() {
		if (_address == null) {
			return StringPool.BLANK;
		}
		else {
			return _address;
		}
	}

	@Override
	public void setAddress(String address) {
		_address = address;
	}

	@JSON
	@Override
	public String getCityNo() {
		if (_cityNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityNo;
		}
	}

	@Override
	public void setCityNo(String cityNo) {
		_columnBitmask |= CITYNO_COLUMN_BITMASK;

		if (_originalCityNo == null) {
			_originalCityNo = _cityNo;
		}

		_cityNo = cityNo;
	}

	public String getOriginalCityNo() {
		return GetterUtil.getString(_originalCityNo);
	}

	@JSON
	@Override
	public String getCityName() {
		if (_cityName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cityName;
		}
	}

	@Override
	public void setCityName(String cityName) {
		_cityName = cityName;
	}

	@JSON
	@Override
	public String getDistrictNo() {
		if (_districtNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtNo;
		}
	}

	@Override
	public void setDistrictNo(String districtNo) {
		_columnBitmask |= DISTRICTNO_COLUMN_BITMASK;

		if (_originalDistrictNo == null) {
			_originalDistrictNo = _districtNo;
		}

		_districtNo = districtNo;
	}

	public String getOriginalDistrictNo() {
		return GetterUtil.getString(_originalDistrictNo);
	}

	@JSON
	@Override
	public String getDistrictName() {
		if (_districtName == null) {
			return StringPool.BLANK;
		}
		else {
			return _districtName;
		}
	}

	@Override
	public void setDistrictName(String districtName) {
		_districtName = districtName;
	}

	@JSON
	@Override
	public String getWardNo() {
		if (_wardNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardNo;
		}
	}

	@Override
	public void setWardNo(String wardNo) {
		_columnBitmask |= WARDNO_COLUMN_BITMASK;

		if (_originalWardNo == null) {
			_originalWardNo = _wardNo;
		}

		_wardNo = wardNo;
	}

	public String getOriginalWardNo() {
		return GetterUtil.getString(_originalWardNo);
	}

	@JSON
	@Override
	public String getWardName() {
		if (_wardName == null) {
			return StringPool.BLANK;
		}
		else {
			return _wardName;
		}
	}

	@Override
	public void setWardName(String wardName) {
		_wardName = wardName;
	}

	@JSON
	@Override
	public String getGpsPosition() {
		if (_gpsPosition == null) {
			return StringPool.BLANK;
		}
		else {
			return _gpsPosition;
		}
	}

	@Override
	public void setGpsPosition(String gpsPosition) {
		_gpsPosition = gpsPosition;
	}

	@JSON
	@Override
	public String getTelNo() {
		if (_telNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _telNo;
		}
	}

	@Override
	public void setTelNo(String telNo) {
		_telNo = telNo;
	}

	@JSON
	@Override
	public String getFax() {
		if (_fax == null) {
			return StringPool.BLANK;
		}
		else {
			return _fax;
		}
	}

	@Override
	public void setFax(String fax) {
		_fax = fax;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return StringPool.BLANK;
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		_email = email;
	}

	@JSON
	@Override
	public String getWebsite() {
		if (_website == null) {
			return StringPool.BLANK;
		}
		else {
			return _website;
		}
	}

	@Override
	public void setWebsite(String website) {
		_website = website;
	}

	@JSON
	@Override
	public String getAaa() {
		if (_aaa == null) {
			return StringPool.BLANK;
		}
		else {
			return _aaa;
		}
	}

	@Override
	public void setAaa(String aaa) {
		_aaa = aaa;
	}

	@JSON
	@Override
	public String getShortName() {
		if (_shortName == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortName;
		}
	}

	@Override
	public void setShortName(String shortName) {
		_shortName = shortName;
	}

	@JSON
	@Override
	public long getLocalSiteId() {
		return _localSiteId;
	}

	@Override
	public void setLocalSiteId(long localSiteId) {
		_columnBitmask |= LOCALSITEID_COLUMN_BITMASK;

		if (!_setOriginalLocalSiteId) {
			_setOriginalLocalSiteId = true;

			_originalLocalSiteId = _localSiteId;
		}

		_localSiteId = localSiteId;
	}

	public long getOriginalLocalSiteId() {
		return _originalLocalSiteId;
	}

	@JSON
	@Override
	public int getIsEmployer() {
		return _isEmployer;
	}

	@Override
	public void setIsEmployer(int isEmployer) {
		_columnBitmask |= ISEMPLOYER_COLUMN_BITMASK;

		if (!_setOriginalIsEmployer) {
			_setOriginalIsEmployer = true;

			_originalIsEmployer = _isEmployer;
		}

		_isEmployer = isEmployer;
	}

	public int getOriginalIsEmployer() {
		return _originalIsEmployer;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorkingUnit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorkingUnit toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorkingUnit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkingUnitImpl workingUnitImpl = new WorkingUnitImpl();

		workingUnitImpl.setWorkingUnitId(getWorkingUnitId());
		workingUnitImpl.setCompanyId(getCompanyId());
		workingUnitImpl.setGroupId(getGroupId());
		workingUnitImpl.setUserId(getUserId());
		workingUnitImpl.setCreateDate(getCreateDate());
		workingUnitImpl.setModifiedDate(getModifiedDate());
		workingUnitImpl.setOrganizationId(getOrganizationId());
		workingUnitImpl.setGovAgencyId(getGovAgencyId());
		workingUnitImpl.setName(getName());
		workingUnitImpl.setEnName(getEnName());
		workingUnitImpl.setParentWorkingUnitId(getParentWorkingUnitId());
		workingUnitImpl.setAddress(getAddress());
		workingUnitImpl.setCityNo(getCityNo());
		workingUnitImpl.setCityName(getCityName());
		workingUnitImpl.setDistrictNo(getDistrictNo());
		workingUnitImpl.setDistrictName(getDistrictName());
		workingUnitImpl.setWardNo(getWardNo());
		workingUnitImpl.setWardName(getWardName());
		workingUnitImpl.setGpsPosition(getGpsPosition());
		workingUnitImpl.setTelNo(getTelNo());
		workingUnitImpl.setFax(getFax());
		workingUnitImpl.setEmail(getEmail());
		workingUnitImpl.setWebsite(getWebsite());
		workingUnitImpl.setAaa(getAaa());
		workingUnitImpl.setShortName(getShortName());
		workingUnitImpl.setLocalSiteId(getLocalSiteId());
		workingUnitImpl.setIsEmployer(getIsEmployer());

		workingUnitImpl.resetOriginalValues();

		return workingUnitImpl;
	}

	@Override
	public int compareTo(WorkingUnit workingUnit) {
		long primaryKey = workingUnit.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorkingUnit)) {
			return false;
		}

		WorkingUnit workingUnit = (WorkingUnit)obj;

		long primaryKey = workingUnit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		WorkingUnitModelImpl workingUnitModelImpl = this;

		workingUnitModelImpl._originalCompanyId = workingUnitModelImpl._companyId;

		workingUnitModelImpl._setOriginalCompanyId = false;

		workingUnitModelImpl._originalGroupId = workingUnitModelImpl._groupId;

		workingUnitModelImpl._setOriginalGroupId = false;

		workingUnitModelImpl._originalOrganizationId = workingUnitModelImpl._organizationId;

		workingUnitModelImpl._setOriginalOrganizationId = false;

		workingUnitModelImpl._originalGovAgencyId = workingUnitModelImpl._govAgencyId;

		workingUnitModelImpl._originalParentWorkingUnitId = workingUnitModelImpl._parentWorkingUnitId;

		workingUnitModelImpl._setOriginalParentWorkingUnitId = false;

		workingUnitModelImpl._originalCityNo = workingUnitModelImpl._cityNo;

		workingUnitModelImpl._originalDistrictNo = workingUnitModelImpl._districtNo;

		workingUnitModelImpl._originalWardNo = workingUnitModelImpl._wardNo;

		workingUnitModelImpl._originalLocalSiteId = workingUnitModelImpl._localSiteId;

		workingUnitModelImpl._setOriginalLocalSiteId = false;

		workingUnitModelImpl._originalIsEmployer = workingUnitModelImpl._isEmployer;

		workingUnitModelImpl._setOriginalIsEmployer = false;

		workingUnitModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WorkingUnit> toCacheModel() {
		WorkingUnitCacheModel workingUnitCacheModel = new WorkingUnitCacheModel();

		workingUnitCacheModel.workingUnitId = getWorkingUnitId();

		workingUnitCacheModel.companyId = getCompanyId();

		workingUnitCacheModel.groupId = getGroupId();

		workingUnitCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			workingUnitCacheModel.createDate = createDate.getTime();
		}
		else {
			workingUnitCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			workingUnitCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			workingUnitCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		workingUnitCacheModel.organizationId = getOrganizationId();

		workingUnitCacheModel.govAgencyId = getGovAgencyId();

		String govAgencyId = workingUnitCacheModel.govAgencyId;

		if ((govAgencyId != null) && (govAgencyId.length() == 0)) {
			workingUnitCacheModel.govAgencyId = null;
		}

		workingUnitCacheModel.name = getName();

		String name = workingUnitCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			workingUnitCacheModel.name = null;
		}

		workingUnitCacheModel.enName = getEnName();

		String enName = workingUnitCacheModel.enName;

		if ((enName != null) && (enName.length() == 0)) {
			workingUnitCacheModel.enName = null;
		}

		workingUnitCacheModel.parentWorkingUnitId = getParentWorkingUnitId();

		workingUnitCacheModel.address = getAddress();

		String address = workingUnitCacheModel.address;

		if ((address != null) && (address.length() == 0)) {
			workingUnitCacheModel.address = null;
		}

		workingUnitCacheModel.cityNo = getCityNo();

		String cityNo = workingUnitCacheModel.cityNo;

		if ((cityNo != null) && (cityNo.length() == 0)) {
			workingUnitCacheModel.cityNo = null;
		}

		workingUnitCacheModel.cityName = getCityName();

		String cityName = workingUnitCacheModel.cityName;

		if ((cityName != null) && (cityName.length() == 0)) {
			workingUnitCacheModel.cityName = null;
		}

		workingUnitCacheModel.districtNo = getDistrictNo();

		String districtNo = workingUnitCacheModel.districtNo;

		if ((districtNo != null) && (districtNo.length() == 0)) {
			workingUnitCacheModel.districtNo = null;
		}

		workingUnitCacheModel.districtName = getDistrictName();

		String districtName = workingUnitCacheModel.districtName;

		if ((districtName != null) && (districtName.length() == 0)) {
			workingUnitCacheModel.districtName = null;
		}

		workingUnitCacheModel.wardNo = getWardNo();

		String wardNo = workingUnitCacheModel.wardNo;

		if ((wardNo != null) && (wardNo.length() == 0)) {
			workingUnitCacheModel.wardNo = null;
		}

		workingUnitCacheModel.wardName = getWardName();

		String wardName = workingUnitCacheModel.wardName;

		if ((wardName != null) && (wardName.length() == 0)) {
			workingUnitCacheModel.wardName = null;
		}

		workingUnitCacheModel.gpsPosition = getGpsPosition();

		String gpsPosition = workingUnitCacheModel.gpsPosition;

		if ((gpsPosition != null) && (gpsPosition.length() == 0)) {
			workingUnitCacheModel.gpsPosition = null;
		}

		workingUnitCacheModel.telNo = getTelNo();

		String telNo = workingUnitCacheModel.telNo;

		if ((telNo != null) && (telNo.length() == 0)) {
			workingUnitCacheModel.telNo = null;
		}

		workingUnitCacheModel.fax = getFax();

		String fax = workingUnitCacheModel.fax;

		if ((fax != null) && (fax.length() == 0)) {
			workingUnitCacheModel.fax = null;
		}

		workingUnitCacheModel.email = getEmail();

		String email = workingUnitCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			workingUnitCacheModel.email = null;
		}

		workingUnitCacheModel.website = getWebsite();

		String website = workingUnitCacheModel.website;

		if ((website != null) && (website.length() == 0)) {
			workingUnitCacheModel.website = null;
		}

		workingUnitCacheModel.aaa = getAaa();

		String aaa = workingUnitCacheModel.aaa;

		if ((aaa != null) && (aaa.length() == 0)) {
			workingUnitCacheModel.aaa = null;
		}

		workingUnitCacheModel.shortName = getShortName();

		String shortName = workingUnitCacheModel.shortName;

		if ((shortName != null) && (shortName.length() == 0)) {
			workingUnitCacheModel.shortName = null;
		}

		workingUnitCacheModel.localSiteId = getLocalSiteId();

		workingUnitCacheModel.isEmployer = getIsEmployer();

		return workingUnitCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(55);

		sb.append("{workingUnitId=");
		sb.append(getWorkingUnitId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", govAgencyId=");
		sb.append(getGovAgencyId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", enName=");
		sb.append(getEnName());
		sb.append(", parentWorkingUnitId=");
		sb.append(getParentWorkingUnitId());
		sb.append(", address=");
		sb.append(getAddress());
		sb.append(", cityNo=");
		sb.append(getCityNo());
		sb.append(", cityName=");
		sb.append(getCityName());
		sb.append(", districtNo=");
		sb.append(getDistrictNo());
		sb.append(", districtName=");
		sb.append(getDistrictName());
		sb.append(", wardNo=");
		sb.append(getWardNo());
		sb.append(", wardName=");
		sb.append(getWardName());
		sb.append(", gpsPosition=");
		sb.append(getGpsPosition());
		sb.append(", telNo=");
		sb.append(getTelNo());
		sb.append(", fax=");
		sb.append(getFax());
		sb.append(", email=");
		sb.append(getEmail());
		sb.append(", website=");
		sb.append(getWebsite());
		sb.append(", aaa=");
		sb.append(getAaa());
		sb.append(", shortName=");
		sb.append(getShortName());
		sb.append(", localSiteId=");
		sb.append(getLocalSiteId());
		sb.append(", isEmployer=");
		sb.append(getIsEmployer());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(85);

		sb.append("<model><model-name>");
		sb.append("org.oep.usermgt.model.WorkingUnit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>workingUnitId</column-name><column-value><![CDATA[");
		sb.append(getWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyId</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>enName</column-name><column-value><![CDATA[");
		sb.append(getEnName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentWorkingUnitId</column-name><column-value><![CDATA[");
		sb.append(getParentWorkingUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>address</column-name><column-value><![CDATA[");
		sb.append(getAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityNo</column-name><column-value><![CDATA[");
		sb.append(getCityNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cityName</column-name><column-value><![CDATA[");
		sb.append(getCityName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtNo</column-name><column-value><![CDATA[");
		sb.append(getDistrictNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>districtName</column-name><column-value><![CDATA[");
		sb.append(getDistrictName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardNo</column-name><column-value><![CDATA[");
		sb.append(getWardNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wardName</column-name><column-value><![CDATA[");
		sb.append(getWardName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gpsPosition</column-name><column-value><![CDATA[");
		sb.append(getGpsPosition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>telNo</column-name><column-value><![CDATA[");
		sb.append(getTelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fax</column-name><column-value><![CDATA[");
		sb.append(getFax());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>email</column-name><column-value><![CDATA[");
		sb.append(getEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>website</column-name><column-value><![CDATA[");
		sb.append(getWebsite());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>aaa</column-name><column-value><![CDATA[");
		sb.append(getAaa());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortName</column-name><column-value><![CDATA[");
		sb.append(getShortName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>localSiteId</column-name><column-value><![CDATA[");
		sb.append(getLocalSiteId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isEmployer</column-name><column-value><![CDATA[");
		sb.append(getIsEmployer());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WorkingUnit.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			WorkingUnit.class
		};
	private long _workingUnitId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _organizationId;
	private long _originalOrganizationId;
	private boolean _setOriginalOrganizationId;
	private String _govAgencyId;
	private String _originalGovAgencyId;
	private String _name;
	private String _enName;
	private long _parentWorkingUnitId;
	private long _originalParentWorkingUnitId;
	private boolean _setOriginalParentWorkingUnitId;
	private String _address;
	private String _cityNo;
	private String _originalCityNo;
	private String _cityName;
	private String _districtNo;
	private String _originalDistrictNo;
	private String _districtName;
	private String _wardNo;
	private String _originalWardNo;
	private String _wardName;
	private String _gpsPosition;
	private String _telNo;
	private String _fax;
	private String _email;
	private String _website;
	private String _aaa;
	private String _shortName;
	private long _localSiteId;
	private long _originalLocalSiteId;
	private boolean _setOriginalLocalSiteId;
	private int _isEmployer;
	private int _originalIsEmployer;
	private boolean _setOriginalIsEmployer;
	private long _columnBitmask;
	private WorkingUnit _escapedModel;
}