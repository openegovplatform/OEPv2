/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.dossiermgt.model.DossierDoc2Template;
import org.oep.core.dossiermgt.model.DossierDoc2TemplateModel;
import org.oep.core.dossiermgt.model.DossierDoc2TemplateSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DossierDoc2Template service. Represents a row in the &quot;oep_dossiermgt_DossierDoc2Template&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.dossiermgt.model.DossierDoc2TemplateModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierDoc2TemplateImpl}.
 * </p>
 *
 * @author trungdk
 * @see DossierDoc2TemplateImpl
 * @see org.oep.core.dossiermgt.model.DossierDoc2Template
 * @see org.oep.core.dossiermgt.model.DossierDoc2TemplateModel
 * @generated
 */
@JSON(strict = true)
public class DossierDoc2TemplateModelImpl extends BaseModelImpl<DossierDoc2Template>
	implements DossierDoc2TemplateModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier doc2 template model instance should use the {@link org.oep.core.dossiermgt.model.DossierDoc2Template} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_DossierDoc2Template";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "dossierDocId", Types.BIGINT },
			{ "docTemplateId", Types.BIGINT },
			{ "sequenceNo", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_DossierDoc2Template (id_ LONG not null primary key,companyId LONG,dossierDocId LONG,docTemplateId LONG,sequenceNo INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_DossierDoc2Template";
	public static final String ORDER_BY_JPQL = " ORDER BY dossierDoc2Template.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_DossierDoc2Template.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.dossiermgt.model.DossierDoc2Template"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.dossiermgt.model.DossierDoc2Template"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DossierDoc2Template toModel(DossierDoc2TemplateSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DossierDoc2Template model = new DossierDoc2TemplateImpl();

		model.setId(soapModel.getId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setDossierDocId(soapModel.getDossierDocId());
		model.setDocTemplateId(soapModel.getDocTemplateId());
		model.setSequenceNo(soapModel.getSequenceNo());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DossierDoc2Template> toModels(
		DossierDoc2TemplateSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DossierDoc2Template> models = new ArrayList<DossierDoc2Template>(soapModels.length);

		for (DossierDoc2TemplateSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.dossiermgt.model.DossierDoc2Template"));

	public DossierDoc2TemplateModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossierDoc2Template.class;
	}

	@Override
	public String getModelClassName() {
		return DossierDoc2Template.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("companyId", getCompanyId());
		attributes.put("dossierDocId", getDossierDocId());
		attributes.put("docTemplateId", getDocTemplateId());
		attributes.put("sequenceNo", getSequenceNo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long dossierDocId = (Long)attributes.get("dossierDocId");

		if (dossierDocId != null) {
			setDossierDocId(dossierDocId);
		}

		Long docTemplateId = (Long)attributes.get("docTemplateId");

		if (docTemplateId != null) {
			setDocTemplateId(docTemplateId);
		}

		Integer sequenceNo = (Integer)attributes.get("sequenceNo");

		if (sequenceNo != null) {
			setSequenceNo(sequenceNo);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getDossierDocId() {
		return _dossierDocId;
	}

	@Override
	public void setDossierDocId(long dossierDocId) {
		_dossierDocId = dossierDocId;
	}

	@JSON
	@Override
	public long getDocTemplateId() {
		return _docTemplateId;
	}

	@Override
	public void setDocTemplateId(long docTemplateId) {
		_docTemplateId = docTemplateId;
	}

	@JSON
	@Override
	public int getSequenceNo() {
		return _sequenceNo;
	}

	@Override
	public void setSequenceNo(int sequenceNo) {
		_sequenceNo = sequenceNo;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossierDoc2Template.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossierDoc2Template toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossierDoc2Template)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierDoc2TemplateImpl dossierDoc2TemplateImpl = new DossierDoc2TemplateImpl();

		dossierDoc2TemplateImpl.setId(getId());
		dossierDoc2TemplateImpl.setCompanyId(getCompanyId());
		dossierDoc2TemplateImpl.setDossierDocId(getDossierDocId());
		dossierDoc2TemplateImpl.setDocTemplateId(getDocTemplateId());
		dossierDoc2TemplateImpl.setSequenceNo(getSequenceNo());

		dossierDoc2TemplateImpl.resetOriginalValues();

		return dossierDoc2TemplateImpl;
	}

	@Override
	public int compareTo(DossierDoc2Template dossierDoc2Template) {
		long primaryKey = dossierDoc2Template.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossierDoc2Template)) {
			return false;
		}

		DossierDoc2Template dossierDoc2Template = (DossierDoc2Template)obj;

		long primaryKey = dossierDoc2Template.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<DossierDoc2Template> toCacheModel() {
		DossierDoc2TemplateCacheModel dossierDoc2TemplateCacheModel = new DossierDoc2TemplateCacheModel();

		dossierDoc2TemplateCacheModel.id = getId();

		dossierDoc2TemplateCacheModel.companyId = getCompanyId();

		dossierDoc2TemplateCacheModel.dossierDocId = getDossierDocId();

		dossierDoc2TemplateCacheModel.docTemplateId = getDocTemplateId();

		dossierDoc2TemplateCacheModel.sequenceNo = getSequenceNo();

		return dossierDoc2TemplateCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", dossierDocId=");
		sb.append(getDossierDocId());
		sb.append(", docTemplateId=");
		sb.append(getDocTemplateId());
		sb.append(", sequenceNo=");
		sb.append(getSequenceNo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.dossiermgt.model.DossierDoc2Template");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierDocId</column-name><column-value><![CDATA[");
		sb.append(getDossierDocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>docTemplateId</column-name><column-value><![CDATA[");
		sb.append(getDocTemplateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sequenceNo</column-name><column-value><![CDATA[");
		sb.append(getSequenceNo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DossierDoc2Template.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DossierDoc2Template.class
		};
	private long _id;
	private long _companyId;
	private long _dossierDocId;
	private long _docTemplateId;
	private int _sequenceNo;
	private DossierDoc2Template _escapedModel;
}