/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.dossiermgt.model.DossierDoc;
import org.oep.core.dossiermgt.model.DossierDocModel;
import org.oep.core.dossiermgt.model.DossierDocSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DossierDoc service. Represents a row in the &quot;oep_dossiermgt_DossierDoc&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.dossiermgt.model.DossierDocModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossierDocImpl}.
 * </p>
 *
 * @author trungdk
 * @see DossierDocImpl
 * @see org.oep.core.dossiermgt.model.DossierDoc
 * @see org.oep.core.dossiermgt.model.DossierDocModel
 * @generated
 */
@JSON(strict = true)
public class DossierDocModelImpl extends BaseModelImpl<DossierDoc>
	implements DossierDocModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossier doc model instance should use the {@link org.oep.core.dossiermgt.model.DossierDoc} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_DossierDoc";
	public static final Object[][] TABLE_COLUMNS = {
			{ "dossierDocId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierProcId", Types.BIGINT },
			{ "documentNo", Types.VARCHAR },
			{ "documentName", Types.VARCHAR },
			{ "note", Types.VARCHAR },
			{ "sequenceNo", Types.INTEGER },
			{ "documentType", Types.INTEGER },
			{ "numberOfFile", Types.INTEGER },
			{ "onlineForm", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_DossierDoc (dossierDocId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,dossierProcId LONG,documentNo VARCHAR(75) null,documentName VARCHAR(75) null,note VARCHAR(75) null,sequenceNo INTEGER,documentType INTEGER,numberOfFile INTEGER,onlineForm VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_DossierDoc";
	public static final String ORDER_BY_JPQL = " ORDER BY dossierDoc.dossierDocId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_DossierDoc.dossierDocId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.dossiermgt.model.DossierDoc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.dossiermgt.model.DossierDoc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DossierDoc toModel(DossierDocSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DossierDoc model = new DossierDocImpl();

		model.setDossierDocId(soapModel.getDossierDocId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDossierProcId(soapModel.getDossierProcId());
		model.setDocumentNo(soapModel.getDocumentNo());
		model.setDocumentName(soapModel.getDocumentName());
		model.setNote(soapModel.getNote());
		model.setSequenceNo(soapModel.getSequenceNo());
		model.setDocumentType(soapModel.getDocumentType());
		model.setNumberOfFile(soapModel.getNumberOfFile());
		model.setOnlineForm(soapModel.getOnlineForm());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DossierDoc> toModels(DossierDocSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DossierDoc> models = new ArrayList<DossierDoc>(soapModels.length);

		for (DossierDocSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.dossiermgt.model.DossierDoc"));

	public DossierDocModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierDocId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierDocId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierDocId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossierDoc.class;
	}

	@Override
	public String getModelClassName() {
		return DossierDoc.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("dossierDocId", getDossierDocId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierProcId", getDossierProcId());
		attributes.put("documentNo", getDocumentNo());
		attributes.put("documentName", getDocumentName());
		attributes.put("note", getNote());
		attributes.put("sequenceNo", getSequenceNo());
		attributes.put("documentType", getDocumentType());
		attributes.put("numberOfFile", getNumberOfFile());
		attributes.put("onlineForm", getOnlineForm());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long dossierDocId = (Long)attributes.get("dossierDocId");

		if (dossierDocId != null) {
			setDossierDocId(dossierDocId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierProcId = (Long)attributes.get("dossierProcId");

		if (dossierProcId != null) {
			setDossierProcId(dossierProcId);
		}

		String documentNo = (String)attributes.get("documentNo");

		if (documentNo != null) {
			setDocumentNo(documentNo);
		}

		String documentName = (String)attributes.get("documentName");

		if (documentName != null) {
			setDocumentName(documentName);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Integer sequenceNo = (Integer)attributes.get("sequenceNo");

		if (sequenceNo != null) {
			setSequenceNo(sequenceNo);
		}

		Integer documentType = (Integer)attributes.get("documentType");

		if (documentType != null) {
			setDocumentType(documentType);
		}

		Integer numberOfFile = (Integer)attributes.get("numberOfFile");

		if (numberOfFile != null) {
			setNumberOfFile(numberOfFile);
		}

		String onlineForm = (String)attributes.get("onlineForm");

		if (onlineForm != null) {
			setOnlineForm(onlineForm);
		}
	}

	@JSON
	@Override
	public long getDossierDocId() {
		return _dossierDocId;
	}

	@Override
	public void setDossierDocId(long dossierDocId) {
		_dossierDocId = dossierDocId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getDossierProcId() {
		return _dossierProcId;
	}

	@Override
	public void setDossierProcId(long dossierProcId) {
		_dossierProcId = dossierProcId;
	}

	@JSON
	@Override
	public String getDocumentNo() {
		if (_documentNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentNo;
		}
	}

	@Override
	public void setDocumentNo(String documentNo) {
		_documentNo = documentNo;
	}

	@JSON
	@Override
	public String getDocumentName() {
		if (_documentName == null) {
			return StringPool.BLANK;
		}
		else {
			return _documentName;
		}
	}

	@Override
	public void setDocumentName(String documentName) {
		_documentName = documentName;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public int getSequenceNo() {
		return _sequenceNo;
	}

	@Override
	public void setSequenceNo(int sequenceNo) {
		_sequenceNo = sequenceNo;
	}

	@JSON
	@Override
	public int getDocumentType() {
		return _documentType;
	}

	@Override
	public void setDocumentType(int documentType) {
		_documentType = documentType;
	}

	@JSON
	@Override
	public int getNumberOfFile() {
		return _numberOfFile;
	}

	@Override
	public void setNumberOfFile(int numberOfFile) {
		_numberOfFile = numberOfFile;
	}

	@JSON
	@Override
	public String getOnlineForm() {
		if (_onlineForm == null) {
			return StringPool.BLANK;
		}
		else {
			return _onlineForm;
		}
	}

	@Override
	public void setOnlineForm(String onlineForm) {
		_onlineForm = onlineForm;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossierDoc.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossierDoc toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossierDoc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossierDocImpl dossierDocImpl = new DossierDocImpl();

		dossierDocImpl.setDossierDocId(getDossierDocId());
		dossierDocImpl.setUserId(getUserId());
		dossierDocImpl.setGroupId(getGroupId());
		dossierDocImpl.setCompanyId(getCompanyId());
		dossierDocImpl.setCreateDate(getCreateDate());
		dossierDocImpl.setModifiedDate(getModifiedDate());
		dossierDocImpl.setDossierProcId(getDossierProcId());
		dossierDocImpl.setDocumentNo(getDocumentNo());
		dossierDocImpl.setDocumentName(getDocumentName());
		dossierDocImpl.setNote(getNote());
		dossierDocImpl.setSequenceNo(getSequenceNo());
		dossierDocImpl.setDocumentType(getDocumentType());
		dossierDocImpl.setNumberOfFile(getNumberOfFile());
		dossierDocImpl.setOnlineForm(getOnlineForm());

		dossierDocImpl.resetOriginalValues();

		return dossierDocImpl;
	}

	@Override
	public int compareTo(DossierDoc dossierDoc) {
		long primaryKey = dossierDoc.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossierDoc)) {
			return false;
		}

		DossierDoc dossierDoc = (DossierDoc)obj;

		long primaryKey = dossierDoc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<DossierDoc> toCacheModel() {
		DossierDocCacheModel dossierDocCacheModel = new DossierDocCacheModel();

		dossierDocCacheModel.dossierDocId = getDossierDocId();

		dossierDocCacheModel.userId = getUserId();

		dossierDocCacheModel.groupId = getGroupId();

		dossierDocCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossierDocCacheModel.createDate = createDate.getTime();
		}
		else {
			dossierDocCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossierDocCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossierDocCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossierDocCacheModel.dossierProcId = getDossierProcId();

		dossierDocCacheModel.documentNo = getDocumentNo();

		String documentNo = dossierDocCacheModel.documentNo;

		if ((documentNo != null) && (documentNo.length() == 0)) {
			dossierDocCacheModel.documentNo = null;
		}

		dossierDocCacheModel.documentName = getDocumentName();

		String documentName = dossierDocCacheModel.documentName;

		if ((documentName != null) && (documentName.length() == 0)) {
			dossierDocCacheModel.documentName = null;
		}

		dossierDocCacheModel.note = getNote();

		String note = dossierDocCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			dossierDocCacheModel.note = null;
		}

		dossierDocCacheModel.sequenceNo = getSequenceNo();

		dossierDocCacheModel.documentType = getDocumentType();

		dossierDocCacheModel.numberOfFile = getNumberOfFile();

		dossierDocCacheModel.onlineForm = getOnlineForm();

		String onlineForm = dossierDocCacheModel.onlineForm;

		if ((onlineForm != null) && (onlineForm.length() == 0)) {
			dossierDocCacheModel.onlineForm = null;
		}

		return dossierDocCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{dossierDocId=");
		sb.append(getDossierDocId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierProcId=");
		sb.append(getDossierProcId());
		sb.append(", documentNo=");
		sb.append(getDocumentNo());
		sb.append(", documentName=");
		sb.append(getDocumentName());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", sequenceNo=");
		sb.append(getSequenceNo());
		sb.append(", documentType=");
		sb.append(getDocumentType());
		sb.append(", numberOfFile=");
		sb.append(getNumberOfFile());
		sb.append(", onlineForm=");
		sb.append(getOnlineForm());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.dossiermgt.model.DossierDoc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>dossierDocId</column-name><column-value><![CDATA[");
		sb.append(getDossierDocId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierProcId</column-name><column-value><![CDATA[");
		sb.append(getDossierProcId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentNo</column-name><column-value><![CDATA[");
		sb.append(getDocumentNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentName</column-name><column-value><![CDATA[");
		sb.append(getDocumentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sequenceNo</column-name><column-value><![CDATA[");
		sb.append(getSequenceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>documentType</column-name><column-value><![CDATA[");
		sb.append(getDocumentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfFile</column-name><column-value><![CDATA[");
		sb.append(getNumberOfFile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>onlineForm</column-name><column-value><![CDATA[");
		sb.append(getOnlineForm());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DossierDoc.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DossierDoc.class
		};
	private long _dossierDocId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _dossierProcId;
	private String _documentNo;
	private String _documentName;
	private String _note;
	private int _sequenceNo;
	private int _documentType;
	private int _numberOfFile;
	private String _onlineForm;
	private DossierDoc _escapedModel;
}