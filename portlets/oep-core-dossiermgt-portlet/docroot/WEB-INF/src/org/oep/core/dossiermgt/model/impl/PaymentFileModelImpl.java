/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.oep.core.dossiermgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.oep.core.dossiermgt.model.PaymentFile;
import org.oep.core.dossiermgt.model.PaymentFileModel;
import org.oep.core.dossiermgt.model.PaymentFileSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the PaymentFile service. Represents a row in the &quot;oep_dossiermgt_paymentfile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.oep.core.dossiermgt.model.PaymentFileModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PaymentFileImpl}.
 * </p>
 *
 * @author trungdk
 * @see PaymentFileImpl
 * @see org.oep.core.dossiermgt.model.PaymentFile
 * @see org.oep.core.dossiermgt.model.PaymentFileModel
 * @generated
 */
@JSON(strict = true)
public class PaymentFileModelImpl extends BaseModelImpl<PaymentFile>
	implements PaymentFileModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a payment file model instance should use the {@link org.oep.core.dossiermgt.model.PaymentFile} interface instead.
	 */
	public static final String TABLE_NAME = "oep_dossiermgt_paymentfile";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "paymentFileId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "organizationId", Types.BIGINT },
			{ "govAgentId", Types.VARCHAR },
			{ "govAgentName", Types.VARCHAR },
			{ "subjectId", Types.VARCHAR },
			{ "subjectType", Types.VARCHAR },
			{ "subjectName", Types.VARCHAR },
			{ "amount", Types.BIGINT },
			{ "paymentType", Types.VARCHAR },
			{ "paymentDescription", Types.VARCHAR },
			{ "transactionInfo", Types.VARCHAR },
			{ "fileEntryId", Types.BIGINT },
			{ "checkingDate", Types.TIMESTAMP },
			{ "checkingUserId", Types.BIGINT },
			{ "checkingUserName", Types.VARCHAR },
			{ "checkingResult", Types.INTEGER },
			{ "checkingNote", Types.VARCHAR },
			{ "ebMessageId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table oep_dossiermgt_paymentfile (uuid_ VARCHAR(75) null,paymentFileId LONG not null primary key,userId LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,organizationId LONG,govAgentId VARCHAR(30) null,govAgentName VARCHAR(200) null,subjectId VARCHAR(30) null,subjectType VARCHAR(30) null,subjectName VARCHAR(100) null,amount LONG,paymentType VARCHAR(100) null,paymentDescription VARCHAR(200) null,transactionInfo VARCHAR(200) null,fileEntryId LONG,checkingDate DATE null,checkingUserId LONG,checkingUserName VARCHAR(100) null,checkingResult INTEGER,checkingNote VARCHAR(200) null,ebMessageId LONG)";
	public static final String TABLE_SQL_DROP = "drop table oep_dossiermgt_paymentfile";
	public static final String ORDER_BY_JPQL = " ORDER BY paymentFile.paymentFileId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY oep_dossiermgt_paymentfile.paymentFileId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.oep.core.dossiermgt.model.PaymentFile"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.oep.core.dossiermgt.model.PaymentFile"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.oep.core.dossiermgt.model.PaymentFile"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long PAYMENTFILEID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static PaymentFile toModel(PaymentFileSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		PaymentFile model = new PaymentFileImpl();

		model.setUuid(soapModel.getUuid());
		model.setPaymentFileId(soapModel.getPaymentFileId());
		model.setUserId(soapModel.getUserId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setOrganizationId(soapModel.getOrganizationId());
		model.setGovAgentId(soapModel.getGovAgentId());
		model.setGovAgentName(soapModel.getGovAgentName());
		model.setSubjectId(soapModel.getSubjectId());
		model.setSubjectType(soapModel.getSubjectType());
		model.setSubjectName(soapModel.getSubjectName());
		model.setAmount(soapModel.getAmount());
		model.setPaymentType(soapModel.getPaymentType());
		model.setPaymentDescription(soapModel.getPaymentDescription());
		model.setTransactionInfo(soapModel.getTransactionInfo());
		model.setFileEntryId(soapModel.getFileEntryId());
		model.setCheckingDate(soapModel.getCheckingDate());
		model.setCheckingUserId(soapModel.getCheckingUserId());
		model.setCheckingUserName(soapModel.getCheckingUserName());
		model.setCheckingResult(soapModel.getCheckingResult());
		model.setCheckingNote(soapModel.getCheckingNote());
		model.setEbMessageId(soapModel.getEbMessageId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<PaymentFile> toModels(PaymentFileSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<PaymentFile> models = new ArrayList<PaymentFile>(soapModels.length);

		for (PaymentFileSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.oep.core.dossiermgt.model.PaymentFile"));

	public PaymentFileModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _paymentFileId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPaymentFileId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _paymentFileId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PaymentFile.class;
	}

	@Override
	public String getModelClassName() {
		return PaymentFile.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("paymentFileId", getPaymentFileId());
		attributes.put("userId", getUserId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("organizationId", getOrganizationId());
		attributes.put("govAgentId", getGovAgentId());
		attributes.put("govAgentName", getGovAgentName());
		attributes.put("subjectId", getSubjectId());
		attributes.put("subjectType", getSubjectType());
		attributes.put("subjectName", getSubjectName());
		attributes.put("amount", getAmount());
		attributes.put("paymentType", getPaymentType());
		attributes.put("paymentDescription", getPaymentDescription());
		attributes.put("transactionInfo", getTransactionInfo());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("checkingDate", getCheckingDate());
		attributes.put("checkingUserId", getCheckingUserId());
		attributes.put("checkingUserName", getCheckingUserName());
		attributes.put("checkingResult", getCheckingResult());
		attributes.put("checkingNote", getCheckingNote());
		attributes.put("ebMessageId", getEbMessageId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long paymentFileId = (Long)attributes.get("paymentFileId");

		if (paymentFileId != null) {
			setPaymentFileId(paymentFileId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long organizationId = (Long)attributes.get("organizationId");

		if (organizationId != null) {
			setOrganizationId(organizationId);
		}

		String govAgentId = (String)attributes.get("govAgentId");

		if (govAgentId != null) {
			setGovAgentId(govAgentId);
		}

		String govAgentName = (String)attributes.get("govAgentName");

		if (govAgentName != null) {
			setGovAgentName(govAgentName);
		}

		String subjectId = (String)attributes.get("subjectId");

		if (subjectId != null) {
			setSubjectId(subjectId);
		}

		String subjectType = (String)attributes.get("subjectType");

		if (subjectType != null) {
			setSubjectType(subjectType);
		}

		String subjectName = (String)attributes.get("subjectName");

		if (subjectName != null) {
			setSubjectName(subjectName);
		}

		Long amount = (Long)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String paymentType = (String)attributes.get("paymentType");

		if (paymentType != null) {
			setPaymentType(paymentType);
		}

		String paymentDescription = (String)attributes.get("paymentDescription");

		if (paymentDescription != null) {
			setPaymentDescription(paymentDescription);
		}

		String transactionInfo = (String)attributes.get("transactionInfo");

		if (transactionInfo != null) {
			setTransactionInfo(transactionInfo);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		Date checkingDate = (Date)attributes.get("checkingDate");

		if (checkingDate != null) {
			setCheckingDate(checkingDate);
		}

		Long checkingUserId = (Long)attributes.get("checkingUserId");

		if (checkingUserId != null) {
			setCheckingUserId(checkingUserId);
		}

		String checkingUserName = (String)attributes.get("checkingUserName");

		if (checkingUserName != null) {
			setCheckingUserName(checkingUserName);
		}

		Integer checkingResult = (Integer)attributes.get("checkingResult");

		if (checkingResult != null) {
			setCheckingResult(checkingResult);
		}

		String checkingNote = (String)attributes.get("checkingNote");

		if (checkingNote != null) {
			setCheckingNote(checkingNote);
		}

		Long ebMessageId = (Long)attributes.get("ebMessageId");

		if (ebMessageId != null) {
			setEbMessageId(ebMessageId);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getPaymentFileId() {
		return _paymentFileId;
	}

	@Override
	public void setPaymentFileId(long paymentFileId) {
		_paymentFileId = paymentFileId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		_organizationId = organizationId;
	}

	@JSON
	@Override
	public String getGovAgentId() {
		if (_govAgentId == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgentId;
		}
	}

	@Override
	public void setGovAgentId(String govAgentId) {
		_govAgentId = govAgentId;
	}

	@JSON
	@Override
	public String getGovAgentName() {
		if (_govAgentName == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgentName;
		}
	}

	@Override
	public void setGovAgentName(String govAgentName) {
		_govAgentName = govAgentName;
	}

	@JSON
	@Override
	public String getSubjectId() {
		if (_subjectId == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectId;
		}
	}

	@Override
	public void setSubjectId(String subjectId) {
		_subjectId = subjectId;
	}

	@JSON
	@Override
	public String getSubjectType() {
		if (_subjectType == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectType;
		}
	}

	@Override
	public void setSubjectType(String subjectType) {
		_subjectType = subjectType;
	}

	@JSON
	@Override
	public String getSubjectName() {
		if (_subjectName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subjectName;
		}
	}

	@Override
	public void setSubjectName(String subjectName) {
		_subjectName = subjectName;
	}

	@JSON
	@Override
	public long getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(long amount) {
		_amount = amount;
	}

	@JSON
	@Override
	public String getPaymentType() {
		if (_paymentType == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentType;
		}
	}

	@Override
	public void setPaymentType(String paymentType) {
		_paymentType = paymentType;
	}

	@JSON
	@Override
	public String getPaymentDescription() {
		if (_paymentDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentDescription;
		}
	}

	@Override
	public void setPaymentDescription(String paymentDescription) {
		_paymentDescription = paymentDescription;
	}

	@JSON
	@Override
	public String getTransactionInfo() {
		if (_transactionInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _transactionInfo;
		}
	}

	@Override
	public void setTransactionInfo(String transactionInfo) {
		_transactionInfo = transactionInfo;
	}

	@JSON
	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@JSON
	@Override
	public Date getCheckingDate() {
		return _checkingDate;
	}

	@Override
	public void setCheckingDate(Date checkingDate) {
		_checkingDate = checkingDate;
	}

	@JSON
	@Override
	public long getCheckingUserId() {
		return _checkingUserId;
	}

	@Override
	public void setCheckingUserId(long checkingUserId) {
		_checkingUserId = checkingUserId;
	}

	@Override
	public String getCheckingUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCheckingUserId(), "uuid",
			_checkingUserUuid);
	}

	@Override
	public void setCheckingUserUuid(String checkingUserUuid) {
		_checkingUserUuid = checkingUserUuid;
	}

	@JSON
	@Override
	public String getCheckingUserName() {
		if (_checkingUserName == null) {
			return StringPool.BLANK;
		}
		else {
			return _checkingUserName;
		}
	}

	@Override
	public void setCheckingUserName(String checkingUserName) {
		_checkingUserName = checkingUserName;
	}

	@JSON
	@Override
	public int getCheckingResult() {
		return _checkingResult;
	}

	@Override
	public void setCheckingResult(int checkingResult) {
		_checkingResult = checkingResult;
	}

	@JSON
	@Override
	public String getCheckingNote() {
		if (_checkingNote == null) {
			return StringPool.BLANK;
		}
		else {
			return _checkingNote;
		}
	}

	@Override
	public void setCheckingNote(String checkingNote) {
		_checkingNote = checkingNote;
	}

	@JSON
	@Override
	public long getEbMessageId() {
		return _ebMessageId;
	}

	@Override
	public void setEbMessageId(long ebMessageId) {
		_ebMessageId = ebMessageId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				PaymentFile.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PaymentFile.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PaymentFile toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PaymentFile)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PaymentFileImpl paymentFileImpl = new PaymentFileImpl();

		paymentFileImpl.setUuid(getUuid());
		paymentFileImpl.setPaymentFileId(getPaymentFileId());
		paymentFileImpl.setUserId(getUserId());
		paymentFileImpl.setGroupId(getGroupId());
		paymentFileImpl.setCompanyId(getCompanyId());
		paymentFileImpl.setCreateDate(getCreateDate());
		paymentFileImpl.setModifiedDate(getModifiedDate());
		paymentFileImpl.setOrganizationId(getOrganizationId());
		paymentFileImpl.setGovAgentId(getGovAgentId());
		paymentFileImpl.setGovAgentName(getGovAgentName());
		paymentFileImpl.setSubjectId(getSubjectId());
		paymentFileImpl.setSubjectType(getSubjectType());
		paymentFileImpl.setSubjectName(getSubjectName());
		paymentFileImpl.setAmount(getAmount());
		paymentFileImpl.setPaymentType(getPaymentType());
		paymentFileImpl.setPaymentDescription(getPaymentDescription());
		paymentFileImpl.setTransactionInfo(getTransactionInfo());
		paymentFileImpl.setFileEntryId(getFileEntryId());
		paymentFileImpl.setCheckingDate(getCheckingDate());
		paymentFileImpl.setCheckingUserId(getCheckingUserId());
		paymentFileImpl.setCheckingUserName(getCheckingUserName());
		paymentFileImpl.setCheckingResult(getCheckingResult());
		paymentFileImpl.setCheckingNote(getCheckingNote());
		paymentFileImpl.setEbMessageId(getEbMessageId());

		paymentFileImpl.resetOriginalValues();

		return paymentFileImpl;
	}

	@Override
	public int compareTo(PaymentFile paymentFile) {
		long primaryKey = paymentFile.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PaymentFile)) {
			return false;
		}

		PaymentFile paymentFile = (PaymentFile)obj;

		long primaryKey = paymentFile.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PaymentFileModelImpl paymentFileModelImpl = this;

		paymentFileModelImpl._originalUuid = paymentFileModelImpl._uuid;

		paymentFileModelImpl._originalGroupId = paymentFileModelImpl._groupId;

		paymentFileModelImpl._setOriginalGroupId = false;

		paymentFileModelImpl._originalCompanyId = paymentFileModelImpl._companyId;

		paymentFileModelImpl._setOriginalCompanyId = false;

		paymentFileModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PaymentFile> toCacheModel() {
		PaymentFileCacheModel paymentFileCacheModel = new PaymentFileCacheModel();

		paymentFileCacheModel.uuid = getUuid();

		String uuid = paymentFileCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			paymentFileCacheModel.uuid = null;
		}

		paymentFileCacheModel.paymentFileId = getPaymentFileId();

		paymentFileCacheModel.userId = getUserId();

		paymentFileCacheModel.groupId = getGroupId();

		paymentFileCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			paymentFileCacheModel.createDate = createDate.getTime();
		}
		else {
			paymentFileCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			paymentFileCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			paymentFileCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		paymentFileCacheModel.organizationId = getOrganizationId();

		paymentFileCacheModel.govAgentId = getGovAgentId();

		String govAgentId = paymentFileCacheModel.govAgentId;

		if ((govAgentId != null) && (govAgentId.length() == 0)) {
			paymentFileCacheModel.govAgentId = null;
		}

		paymentFileCacheModel.govAgentName = getGovAgentName();

		String govAgentName = paymentFileCacheModel.govAgentName;

		if ((govAgentName != null) && (govAgentName.length() == 0)) {
			paymentFileCacheModel.govAgentName = null;
		}

		paymentFileCacheModel.subjectId = getSubjectId();

		String subjectId = paymentFileCacheModel.subjectId;

		if ((subjectId != null) && (subjectId.length() == 0)) {
			paymentFileCacheModel.subjectId = null;
		}

		paymentFileCacheModel.subjectType = getSubjectType();

		String subjectType = paymentFileCacheModel.subjectType;

		if ((subjectType != null) && (subjectType.length() == 0)) {
			paymentFileCacheModel.subjectType = null;
		}

		paymentFileCacheModel.subjectName = getSubjectName();

		String subjectName = paymentFileCacheModel.subjectName;

		if ((subjectName != null) && (subjectName.length() == 0)) {
			paymentFileCacheModel.subjectName = null;
		}

		paymentFileCacheModel.amount = getAmount();

		paymentFileCacheModel.paymentType = getPaymentType();

		String paymentType = paymentFileCacheModel.paymentType;

		if ((paymentType != null) && (paymentType.length() == 0)) {
			paymentFileCacheModel.paymentType = null;
		}

		paymentFileCacheModel.paymentDescription = getPaymentDescription();

		String paymentDescription = paymentFileCacheModel.paymentDescription;

		if ((paymentDescription != null) && (paymentDescription.length() == 0)) {
			paymentFileCacheModel.paymentDescription = null;
		}

		paymentFileCacheModel.transactionInfo = getTransactionInfo();

		String transactionInfo = paymentFileCacheModel.transactionInfo;

		if ((transactionInfo != null) && (transactionInfo.length() == 0)) {
			paymentFileCacheModel.transactionInfo = null;
		}

		paymentFileCacheModel.fileEntryId = getFileEntryId();

		Date checkingDate = getCheckingDate();

		if (checkingDate != null) {
			paymentFileCacheModel.checkingDate = checkingDate.getTime();
		}
		else {
			paymentFileCacheModel.checkingDate = Long.MIN_VALUE;
		}

		paymentFileCacheModel.checkingUserId = getCheckingUserId();

		paymentFileCacheModel.checkingUserName = getCheckingUserName();

		String checkingUserName = paymentFileCacheModel.checkingUserName;

		if ((checkingUserName != null) && (checkingUserName.length() == 0)) {
			paymentFileCacheModel.checkingUserName = null;
		}

		paymentFileCacheModel.checkingResult = getCheckingResult();

		paymentFileCacheModel.checkingNote = getCheckingNote();

		String checkingNote = paymentFileCacheModel.checkingNote;

		if ((checkingNote != null) && (checkingNote.length() == 0)) {
			paymentFileCacheModel.checkingNote = null;
		}

		paymentFileCacheModel.ebMessageId = getEbMessageId();

		return paymentFileCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(49);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", paymentFileId=");
		sb.append(getPaymentFileId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", organizationId=");
		sb.append(getOrganizationId());
		sb.append(", govAgentId=");
		sb.append(getGovAgentId());
		sb.append(", govAgentName=");
		sb.append(getGovAgentName());
		sb.append(", subjectId=");
		sb.append(getSubjectId());
		sb.append(", subjectType=");
		sb.append(getSubjectType());
		sb.append(", subjectName=");
		sb.append(getSubjectName());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", paymentType=");
		sb.append(getPaymentType());
		sb.append(", paymentDescription=");
		sb.append(getPaymentDescription());
		sb.append(", transactionInfo=");
		sb.append(getTransactionInfo());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", checkingDate=");
		sb.append(getCheckingDate());
		sb.append(", checkingUserId=");
		sb.append(getCheckingUserId());
		sb.append(", checkingUserName=");
		sb.append(getCheckingUserName());
		sb.append(", checkingResult=");
		sb.append(getCheckingResult());
		sb.append(", checkingNote=");
		sb.append(getCheckingNote());
		sb.append(", ebMessageId=");
		sb.append(getEbMessageId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(76);

		sb.append("<model><model-name>");
		sb.append("org.oep.core.dossiermgt.model.PaymentFile");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFileId</column-name><column-value><![CDATA[");
		sb.append(getPaymentFileId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationId</column-name><column-value><![CDATA[");
		sb.append(getOrganizationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgentId</column-name><column-value><![CDATA[");
		sb.append(getGovAgentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgentName</column-name><column-value><![CDATA[");
		sb.append(getGovAgentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectId</column-name><column-value><![CDATA[");
		sb.append(getSubjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectType</column-name><column-value><![CDATA[");
		sb.append(getSubjectType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subjectName</column-name><column-value><![CDATA[");
		sb.append(getSubjectName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentType</column-name><column-value><![CDATA[");
		sb.append(getPaymentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentDescription</column-name><column-value><![CDATA[");
		sb.append(getPaymentDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>transactionInfo</column-name><column-value><![CDATA[");
		sb.append(getTransactionInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkingDate</column-name><column-value><![CDATA[");
		sb.append(getCheckingDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkingUserId</column-name><column-value><![CDATA[");
		sb.append(getCheckingUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkingUserName</column-name><column-value><![CDATA[");
		sb.append(getCheckingUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkingResult</column-name><column-value><![CDATA[");
		sb.append(getCheckingResult());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkingNote</column-name><column-value><![CDATA[");
		sb.append(getCheckingNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ebMessageId</column-name><column-value><![CDATA[");
		sb.append(getEbMessageId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PaymentFile.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PaymentFile.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _paymentFileId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _organizationId;
	private String _govAgentId;
	private String _govAgentName;
	private String _subjectId;
	private String _subjectType;
	private String _subjectName;
	private long _amount;
	private String _paymentType;
	private String _paymentDescription;
	private String _transactionInfo;
	private long _fileEntryId;
	private Date _checkingDate;
	private long _checkingUserId;
	private String _checkingUserUuid;
	private String _checkingUserName;
	private int _checkingResult;
	private String _checkingNote;
	private long _ebMessageId;
	private long _columnBitmask;
	private PaymentFile _escapedModel;
}